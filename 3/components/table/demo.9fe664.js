(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{3349:function(n,s){},3791:function(n,s,a){n.exports={content:{"zh-CN":[["p","这个例子通过简单的 ajax 读取方式，演示了如何从服务端读取并展现数据，具有筛选、排序等功能以及页面 loading 效果。开发者可以自行接入其他数据处理方式。"],["p","另外，本例也展示了筛选排序功能如何交给服务端实现，列不需要指定具体的 ",["code","onFilter"]," 和 ",["code","sorter"]," 函数，而是在把筛选和排序的参数发到服务端来处理。"],["p",["strong","注意，此示例使用 ",["a",{title:null,href:"https://randomuser.me"},"模拟接口"],"，展示数据可能不准确，请打开网络面板查看请求。"]]],"en-US":[["p","This example shows how to fetch and present data from a remote server, and how to implement filtering and sorting in server side by sending related parameters to server."],["p",["strong","Note, this example use ",["a",{title:null,href:"https://randomuser.me"},"Mock API"]," that you can look up in Network Console."]]]},meta:{order:10,title:{"en-US":"Ajax","zh-CN":"远程加载数据"},filename:"components/table/demo/ajax.md",id:"components-table-demo-ajax"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> reqwest <span class="token keyword">from</span> <span class="token string">\'reqwest\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    sorter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> name <span class="token operator">=</span><span class="token operator">></span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>first<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>last<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'20%\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Gender\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'gender\'</span><span class="token punctuation">,</span>\n    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'Male\'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">\'male\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'Female\'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">\'female\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'20%\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'email\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    pagination<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  handleTableChange <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> pager <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pagination <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    pager<span class="token punctuation">.</span>current <span class="token operator">=</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      pagination<span class="token punctuation">:</span> pager<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      results<span class="token punctuation">:</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>\n      page<span class="token punctuation">:</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span>\n      sortField<span class="token punctuation">:</span> sorter<span class="token punctuation">.</span>field<span class="token punctuation">,</span>\n      sortOrder<span class="token punctuation">:</span> sorter<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n      <span class="token operator">...</span>filters<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  fetch <span class="token operator">=</span> <span class="token punctuation">(</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'params:\'</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">reqwest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      url<span class="token punctuation">:</span> <span class="token string">\'https://randomuser.me/api\'</span><span class="token punctuation">,</span>\n      method<span class="token punctuation">:</span> <span class="token string">\'get\'</span><span class="token punctuation">,</span>\n      data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        results<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span>params<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'json\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> pagination <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pagination <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token comment" spellcheck="true">// Read total count from server</span>\n      <span class="token comment" spellcheck="true">// pagination.total = data.totalCount;</span>\n      pagination<span class="token punctuation">.</span>total <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        data<span class="token punctuation">:</span> data<span class="token punctuation">.</span>results<span class="token punctuation">,</span>\n        pagination<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowKey</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>record <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>login<span class="token punctuation">.</span>uuid<span class="token punctuation">}</span></span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">}</span></span>\n        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pagination<span class="token punctuation">}</span></span>\n        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>loading<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleTableChange<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> reqwest <span class="token keyword">from</span> <span class="token string">\'reqwest\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    sorter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">name</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>first<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>last<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token string">\'20%\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Gender\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'gender\'</span><span class="token punctuation">,</span>\n    filters<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">\'Male\'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">\'male\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">\'Female\'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">\'female\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token string">\'20%\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'email\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    pagination<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> pager <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pagination <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    pager<span class="token punctuation">.</span>current <span class="token operator">=</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      pagination<span class="token operator">:</span> pager<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      results<span class="token operator">:</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>\n      page<span class="token operator">:</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span>\n      sortField<span class="token operator">:</span> sorter<span class="token punctuation">.</span>field<span class="token punctuation">,</span>\n      sortOrder<span class="token operator">:</span> sorter<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n      <span class="token operator">...</span>filters<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">fetch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'params:\'</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">reqwest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      url<span class="token operator">:</span> <span class="token string">\'https://randomuser.me/api\'</span><span class="token punctuation">,</span>\n      method<span class="token operator">:</span> <span class="token string">\'get\'</span><span class="token punctuation">,</span>\n      data<span class="token operator">:</span> <span class="token punctuation">{</span>\n        results<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span>params<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'json\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> pagination <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pagination <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token comment">// Read total count from server</span>\n      <span class="token comment">// pagination.total = data.totalCount;</span>\n      pagination<span class="token punctuation">.</span>total <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        data<span class="token operator">:</span> data<span class="token punctuation">.</span>results<span class="token punctuation">,</span>\n        pagination<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowKey</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">record</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>login<span class="token punctuation">.</span>uuid<span class="token punctuation">}</span></span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">}</span></span>\n        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pagination<span class="token punctuation">}</span></span>\n        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>loading<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleTableChange<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,s=a(0),t=(a(14),a(5)),p=(n=a(3348))&&n.__esModule?n:{default:n};function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function e(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function c(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?e(Object(a),!0).forEach((function(s){g(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function u(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function l(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function k(n,s){return!s||"object"!==o(s)&&"function"!=typeof s?r(n):s}function i(n){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function r(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function d(n,s){return(d=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function g(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}var m=[{title:"Name",dataIndex:"name",sorter:!0,render:function(n){return"".concat(n.first," ").concat(n.last)},width:"20%"},{title:"Gender",dataIndex:"gender",filters:[{text:"Male",value:"male"},{text:"Female",value:"female"}],width:"20%"},{title:"Email",dataIndex:"email"}],h=function(n){function a(){var n,s;u(this,a);for(var t=arguments.length,o=new Array(t),e=0;e<t;e++)o[e]=arguments[e];return g(r(s=k(this,(n=i(a)).call.apply(n,[this].concat(o)))),"state",{data:[],pagination:{},loading:!1}),g(r(s),"handleTableChange",(function(n,a,t){var p=c({},s.state.pagination);p.current=n.current,s.setState({pagination:p}),s.fetch(c({results:n.pageSize,page:n.current,sortField:t.field,sortOrder:t.order},a))})),g(r(s),"fetch",(function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};console.log("params:",n),s.setState({loading:!0}),(0,p.default)({url:"https://randomuser.me/api",method:"get",data:c({results:10},n),type:"json"}).then((function(n){var a=c({},s.state.pagination);a.total=200,s.setState({loading:!1,data:n.results,pagination:a})}))})),s}var o,e,h;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&d(n,s)}(a,n),o=a,(e=[{key:"componentDidMount",value:function(){this.fetch()}},{key:"render",value:function(){return s.createElement(t.Table,{columns:m,rowKey:function(n){return n.login.uuid},dataSource:this.state.data,pagination:this.state.pagination,loading:this.state.loading,onChange:this.handleTableChange})}}])&&l(o.prototype,e),h&&l(o,h),a}(s.Component);return s.createElement(h,null)}}},3792:function(n,s,a){n.exports={content:{"zh-CN":[["p","简单的表格，最后一列是各种操作。"]],"en-US":[["p","Simple table with actions."]]},meta:{order:0,title:{"en-US":"Basic Usage","zh-CN":"基本用法"},filename:"components/table/demo/basic.md",id:"components-table-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> tags <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n          <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token punctuation">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tag</span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Tag</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'action\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token punctuation">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'loser\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'cool\'</span><span class="token punctuation">,</span> <span class="token string">\'teacher\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">text</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">tags</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">tag</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'action\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'loser\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'cool\'</span><span class="token punctuation">,</span> <span class="token string">\'teacher\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=[{title:"Name",dataIndex:"name",key:"name",render:function(s){return n.createElement("a",null,s)}},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"},{title:"Tags",key:"tags",dataIndex:"tags",render:function(a){return n.createElement("span",null,a.map((function(a){var t=a.length>5?"geekblue":"green";return"loser"===a&&(t="volcano"),n.createElement(s.Tag,{color:t,key:a},a.toUpperCase())})))}},{title:"Action",key:"action",render:function(s,a){return n.createElement("span",null,n.createElement("a",{style:{marginRight:16}},"Invite ",a.name),n.createElement("a",null,"Delete"))}}];return n.createElement(s.Table,{columns:t,dataSource:[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park",tags:["loser"]},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park",tags:["cool","teacher"]}]})}}},3793:function(n,s,a){n.exports={content:{"zh-CN":[["p","添加表格边框线，页头和页脚。"]],"en-US":[["p","Add border, title and footer for table."]]},meta:{order:12,title:{"en-US":"border, title and footer","zh-CN":"带边框"},filename:"components/table/demo/bordered.md",id:"components-table-demo-bordered"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Cash Assets\'</span><span class="token punctuation">,</span>\n    className<span class="token punctuation">:</span> <span class="token string">\'column-money\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'money\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    money<span class="token punctuation">:</span> <span class="token string">\'￥300,000.00\'</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    money<span class="token punctuation">:</span> <span class="token string">\'￥1,256,000.00\'</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    money<span class="token punctuation">:</span> <span class="token string">\'￥120,000.00\'</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token attr-name">bordered</span>\n    <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">\'Header\'</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">\'Footer\'</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">text</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Cash Assets\'</span><span class="token punctuation">,</span>\n    className<span class="token operator">:</span> <span class="token string">\'column-money\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'money\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    money<span class="token operator">:</span> <span class="token string">\'￥300,000.00\'</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    money<span class="token operator">:</span> <span class="token string">\'￥1,256,000.00\'</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    money<span class="token operator">:</span> <span class="token string">\'￥120,000.00\'</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token attr-name">bordered</span>\n    <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'Header\'</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'Footer\'</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=[{title:"Name",dataIndex:"name",render:function(s){return n.createElement("a",null,s)}},{title:"Cash Assets",className:"column-money",dataIndex:"money"},{title:"Address",dataIndex:"address"}];return n.createElement(s.Table,{columns:t,dataSource:[{key:"1",name:"John Brown",money:"￥300,000.00",address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",money:"￥1,256,000.00",address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",money:"￥120,000.00",address:"Sidney No. 1 Lake Park"}],bordered:!0,title:function(){return"Header"},footer:function(){return"Footer"}})},style:"th.column-money,\ntd.column-money {\n  text-align: right !important;\n}",highlightedStyle:'<span class="token selector">th<span class="token class">.column-money</span>,\ntd<span class="token class">.column-money</span> </span><span class="token punctuation">{</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> right <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},3794:function(n,s,a){n.exports={content:{"zh-CN":[["p","表头只支持列合并，使用 column 里的 colSpan 进行设置。"],["p","表格支持行/列合并，使用 render 里的单元格属性 colSpan 或者 rowSpan 设值为 0 时，设置的表格不会渲染。"]],"en-US":[["p","Table column title supports ",["code","colSpan"]," that set in ",["code","column"],"."],["p","Table cell supports ",["code","colSpan"]," and ",["code","rowSpan"]," that set in render return object. When each of them is set to ",["code","0"],", the cell will not be rendered."]]},meta:{order:15,title:{"en-US":"colSpan and rowSpan","zh-CN":"表格行/列合并"},filename:"components/table/demo/colspan-rowspan.md",id:"components-table-demo-colspan-rowspan"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// In the fifth row, other columns are merged into first column</span>\n<span class="token comment" spellcheck="true">// by setting it\'s colSpan to be 0</span>\n<span class="token keyword">const</span> renderContent <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    children<span class="token punctuation">:</span> value<span class="token punctuation">,</span>\n    props<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>colSpan <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        children<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n        props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          colSpan<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> renderContent<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Home phone\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'tel\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n        children<span class="token punctuation">:</span> value<span class="token punctuation">,</span>\n        props<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>rowSpan <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment" spellcheck="true">// These two are merged into above cell</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>rowSpan <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>colSpan <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Phone\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'phone\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> renderContent<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> renderContent<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    tel<span class="token punctuation">:</span> <span class="token string">\'0571-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token punctuation">:</span> <span class="token number">18889898989</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    tel<span class="token punctuation">:</span> <span class="token string">\'0571-22098333\'</span><span class="token punctuation">,</span>\n    phone<span class="token punctuation">:</span> <span class="token number">18889898888</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    tel<span class="token punctuation">:</span> <span class="token string">\'0575-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token punctuation">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n    tel<span class="token punctuation">:</span> <span class="token string">\'0575-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token punctuation">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jake White\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n    tel<span class="token punctuation">:</span> <span class="token string">\'0575-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token punctuation">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Dublin No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">bordered</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// In the fifth row, other columns are merged into first column</span>\n<span class="token comment">// by setting it\'s colSpan to be 0</span>\n<span class="token keyword">const</span> <span class="token function-variable function">renderContent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    children<span class="token operator">:</span> value<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>colSpan <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        children<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n        props<span class="token operator">:</span> <span class="token punctuation">{</span>\n          colSpan<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    render<span class="token operator">:</span> renderContent<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Home phone\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'tel\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n        children<span class="token operator">:</span> value<span class="token punctuation">,</span>\n        props<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>rowSpan <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// These two are merged into above cell</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>rowSpan <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">.</span>props<span class="token punctuation">.</span>colSpan <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Phone\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'phone\'</span><span class="token punctuation">,</span>\n    render<span class="token operator">:</span> renderContent<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    render<span class="token operator">:</span> renderContent<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    tel<span class="token operator">:</span> <span class="token string">\'0571-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token operator">:</span> <span class="token number">18889898989</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    tel<span class="token operator">:</span> <span class="token string">\'0571-22098333\'</span><span class="token punctuation">,</span>\n    phone<span class="token operator">:</span> <span class="token number">18889898888</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    tel<span class="token operator">:</span> <span class="token string">\'0575-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n    tel<span class="token operator">:</span> <span class="token string">\'0575-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jake White\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n    tel<span class="token operator">:</span> <span class="token string">\'0575-22098909\'</span><span class="token punctuation">,</span>\n    phone<span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Dublin No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">bordered</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=function(n,s,a){var t={children:n,props:{}};return 4===a&&(t.props.colSpan=0),t},p=[{title:"Name",dataIndex:"name",render:function(s,a,t){return t<4?n.createElement("a",null,s):{children:n.createElement("a",null,s),props:{colSpan:5}}}},{title:"Age",dataIndex:"age",render:t},{title:"Home phone",colSpan:2,dataIndex:"tel",render:function(n,s,a){var t={children:n,props:{}};return 2===a&&(t.props.rowSpan=2),3===a&&(t.props.rowSpan=0),4===a&&(t.props.colSpan=0),t}},{title:"Phone",colSpan:0,dataIndex:"phone",render:t},{title:"Address",dataIndex:"address",render:t}];return n.createElement(s.Table,{columns:p,dataSource:[{key:"1",name:"John Brown",age:32,tel:"0571-22098909",phone:18889898989,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",tel:"0571-22098333",phone:18889898888,age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,tel:"0575-22098909",phone:18900010002,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:18,tel:"0575-22098909",phone:18900010002,address:"London No. 2 Lake Park"},{key:"5",name:"Jake White",age:18,tel:"0575-22098909",phone:18900010002,address:"Dublin No. 2 Lake Park"}],bordered:!0})}}},3795:function(n,s,a){n.exports={content:{"zh-CN":[["p","通过 ",["code","filterDropdown"]," 自定义的列筛选功能，并实现一个搜索列的示例。"]],"en-US":[["p","Implement a customized column search example via ",["code","filterDropdown"],"."]]},meta:{order:9,title:{"en-US":"Customized filter panel","zh-CN":"自定义筛选菜单"},filename:"components/table/demo/custom-filter-panel.md",id:"components-table-demo-custom-filter-panel"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Highlighter <span class="token keyword">from</span> <span class="token string">\'react-highlight-words\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SearchOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    searchText<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    searchedColumn<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  getColumnSearchProps <span class="token operator">=</span> dataIndex <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    filterDropdown<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> setSelectedKeys<span class="token punctuation">,</span> selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> clearFilters <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n          <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>node <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>searchInput <span class="token operator">=</span> node<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">placeholder</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`Search </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dataIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setSelectedKeys</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token number">188</span><span class="token punctuation">,</span> marginBottom<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> display<span class="token punctuation">:</span> <span class="token string">\'block\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">icon={&lt;SearchOutlined</span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>\n          size<span class="token operator">=</span><span class="token string">"small"</span>\n          style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span> marginRight<span class="token punctuation">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          Search\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleReset</span><span class="token punctuation">(</span>clearFilters<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token number">90</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          Reset\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    filterIcon<span class="token punctuation">:</span> filtered <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SearchOutlined</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> filtered <span class="token operator">?</span> <span class="token string">\'#1890ff\'</span> <span class="token punctuation">:</span> undefined <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>\n      record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span>\n        <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    onFilterDropdownVisibleChange<span class="token punctuation">:</span> visible <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>searchInput<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>searchedColumn <span class="token operator">===</span> dataIndex <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Highlighter</span>\n          <span class="token attr-name">highlightStyle</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ffc069\'</span><span class="token punctuation">,</span> padding<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">searchWords</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>searchText<span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">autoEscape</span>\n          <span class="token attr-name">textToHighlight</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n        text\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  handleSearch <span class="token operator">=</span> <span class="token punctuation">(</span>selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      searchText<span class="token punctuation">:</span> selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      searchedColumn<span class="token punctuation">:</span> dataIndex<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleReset <span class="token operator">=</span> clearFilters <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">clearFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> searchText<span class="token punctuation">:</span> <span class="token string">\'\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token string">\'30%\'</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token string">\'20%\'</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">\'address\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Highlighter <span class="token keyword">from</span> <span class="token string">\'react-highlight-words\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SearchOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    searchText<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    searchedColumn<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">getColumnSearchProps</span> <span class="token operator">=</span> <span class="token parameter">dataIndex</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">filterDropdown</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> setSelectedKeys<span class="token punctuation">,</span> selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> clearFilters <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span>\n          <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">node</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>searchInput <span class="token operator">=</span> node<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">placeholder</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Search </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dataIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">e</span> <span class="token operator">=></span> <span class="token function">setSelectedKeys</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">188</span><span class="token punctuation">,</span> marginBottom<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span> display<span class="token operator">:</span> <span class="token string">\'block\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> marginRight<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          Search\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleReset</span><span class="token punctuation">(</span>clearFilters<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">90</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          Reset\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">filterIcon</span><span class="token operator">:</span> <span class="token parameter">filtered</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchOutlined</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> color<span class="token operator">:</span> filtered <span class="token operator">?</span> <span class="token string">\'#1890ff\'</span> <span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n      record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span>\n        <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">onFilterDropdownVisibleChange</span><span class="token operator">:</span> <span class="token parameter">visible</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>searchInput<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">text</span> <span class="token operator">=></span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>searchedColumn <span class="token operator">===</span> dataIndex <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Highlighter</span></span>\n          <span class="token attr-name">highlightStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> backgroundColor<span class="token operator">:</span> <span class="token string">\'#ffc069\'</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">searchWords</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>searchText<span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">autoEscape</span>\n          <span class="token attr-name">textToHighlight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n        text\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleSearch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      searchText<span class="token operator">:</span> selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      searchedColumn<span class="token operator">:</span> dataIndex<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleReset</span> <span class="token operator">=</span> <span class="token parameter">clearFilters</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">clearFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> searchText<span class="token operator">:</span> <span class="token string">\'\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token string">\'30%\'</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token string">\'20%\'</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">\'address\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,s=a(0),t=(a(14),a(5)),p=(n=a(3796))&&n.__esModule?n:{default:n},o=a(17);function e(n){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function c(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function u(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?c(Object(a),!0).forEach((function(s){m(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function l(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function k(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function i(n,s){return!s||"object"!==e(s)&&"function"!=typeof s?d(n):s}function r(n){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function d(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function g(n,s){return(g=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function m(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}var h=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Joe Black",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Jim Green",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],y=function(n){function a(){var n,e;l(this,a);for(var c=arguments.length,u=new Array(c),k=0;k<c;k++)u[k]=arguments[k];return m(d(e=i(this,(n=r(a)).call.apply(n,[this].concat(u)))),"state",{searchText:"",searchedColumn:""}),m(d(e),"getColumnSearchProps",(function(n){return{filterDropdown:function(a){var p=a.setSelectedKeys,c=a.selectedKeys,u=a.confirm,l=a.clearFilters;return s.createElement("div",{style:{padding:8}},s.createElement(t.Input,{ref:function(n){e.searchInput=n},placeholder:"Search ".concat(n),value:c[0],onChange:function(n){return p(n.target.value?[n.target.value]:[])},onPressEnter:function(){return e.handleSearch(c,u,n)},style:{width:188,marginBottom:8,display:"block"}}),s.createElement(t.Button,{type:"primary",onClick:function(){return e.handleSearch(c,u,n)},icon:s.createElement(o.SearchOutlined,null),size:"small",style:{width:90,marginRight:8}},"Search"),s.createElement(t.Button,{onClick:function(){return e.handleReset(l)},size:"small",style:{width:90}},"Reset"))},filterIcon:function(n){return s.createElement(o.SearchOutlined,{style:{color:n?"#1890ff":void 0}})},onFilter:function(s,a){return a[n].toString().toLowerCase().includes(s.toLowerCase())},onFilterDropdownVisibleChange:function(n){n&&setTimeout((function(){return e.searchInput.select()}))},render:function(a){return e.state.searchedColumn===n?s.createElement(p.default,{highlightStyle:{backgroundColor:"#ffc069",padding:0},searchWords:[e.state.searchText],autoEscape:!0,textToHighlight:a.toString()}):a}}})),m(d(e),"handleSearch",(function(n,s,a){s(),e.setState({searchText:n[0],searchedColumn:a})})),m(d(e),"handleReset",(function(n){n(),e.setState({searchText:""})})),e}var e,c,y;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&g(n,s)}(a,n),e=a,(c=[{key:"render",value:function(){var n=[u({title:"Name",dataIndex:"name",key:"name",width:"30%"},this.getColumnSearchProps("name")),u({title:"Age",dataIndex:"age",key:"age",width:"20%"},this.getColumnSearchProps("age")),u({title:"Address",dataIndex:"address",key:"address"},this.getColumnSearchProps("address"))];return s.createElement(t.Table,{columns:n,dataSource:h})}}])&&k(e.prototype,c),y&&k(e,y),a}(s.Component);return s.createElement(y,null)}}},3797:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用自定义元素，我们可以集成 react-dnd 来实现拖拽排序。"]],"en-US":[["p","By using custom components, we can integrate table with react-dnd to implement drag sorting."]]},meta:{order:26,title:{"en-US":"Drag sorting","zh-CN":"拖拽排序"},filename:"components/table/demo/drag-sorting.md",id:"components-table-demo-drag-sorting"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> DragSource<span class="token punctuation">,</span> DropTarget <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-dnd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> HTML5Backend <span class="token keyword">from</span> <span class="token string">\'react-dnd-html5-backend\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">\'immutability-helper\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> dragingIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BodyRow</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> connectDragSource<span class="token punctuation">,</span> connectDropTarget<span class="token punctuation">,</span> moveRow<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>restProps<span class="token punctuation">.</span>style<span class="token punctuation">,</span> cursor<span class="token punctuation">:</span> <span class="token string">\'move\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> className <span class="token punctuation">}</span> <span class="token operator">=</span> restProps<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isOver<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>restProps<span class="token punctuation">.</span>index <span class="token operator">></span> dragingIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        className <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">\' drop-over-downward\'</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>restProps<span class="token punctuation">.</span>index <span class="token operator">&lt;</span> dragingIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        className <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">\' drop-over-upward\'</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token function">connectDragSource</span><span class="token punctuation">(</span>\n      <span class="token function">connectDropTarget</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>tr <span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> rowSource <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">beginDrag</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    dragingIndex <span class="token operator">=</span> props<span class="token punctuation">.</span>index<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      index<span class="token punctuation">:</span> props<span class="token punctuation">.</span>index<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rowTarget <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">drop</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> monitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> dragIndex <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> hoverIndex <span class="token operator">=</span> props<span class="token punctuation">.</span>index<span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">// Don\'t replace items with themselves</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> hoverIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment" spellcheck="true">// Time to actually perform the action</span>\n    props<span class="token punctuation">.</span><span class="token function">moveRow</span><span class="token punctuation">(</span>dragIndex<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">// Note: we\'re mutating the monitor item here!</span>\n    <span class="token comment" spellcheck="true">// Generally it\'s better to avoid mutations,</span>\n    <span class="token comment" spellcheck="true">// but it\'s good here for the sake of performance</span>\n    <span class="token comment" spellcheck="true">// to avoid expensive index searches.</span>\n    monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index <span class="token operator">=</span> hoverIndex<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> DragableBodyRow <span class="token operator">=</span> <span class="token function">DropTarget</span><span class="token punctuation">(</span><span class="token string">\'row\'</span><span class="token punctuation">,</span> rowTarget<span class="token punctuation">,</span> <span class="token punctuation">(</span>connect<span class="token punctuation">,</span> monitor<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  connectDropTarget<span class="token punctuation">:</span> connect<span class="token punctuation">.</span><span class="token function">dropTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  isOver<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>\n  <span class="token function">DragSource</span><span class="token punctuation">(</span><span class="token string">\'row\'</span><span class="token punctuation">,</span> rowSource<span class="token punctuation">,</span> connect <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    connectDragSource<span class="token punctuation">:</span> connect<span class="token punctuation">.</span><span class="token function">dragSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>BodyRow<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">DragSortingTable</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    data<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    body<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      row<span class="token punctuation">:</span> DragableBodyRow<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  moveRow <span class="token operator">=</span> <span class="token punctuation">(</span>dragIndex<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> dragRow <span class="token operator">=</span> data<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>\n      <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          $splice<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DndProvider</span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n          <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n          <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">}</span></span>\n          <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>components<span class="token punctuation">}</span></span>\n          <span class="token attr-name">onRow</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            index<span class="token punctuation">,</span>\n            moveRow<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>moveRow<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DndProvider</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DragSortingTable</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> DragSource<span class="token punctuation">,</span> DropTarget <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-dnd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> HTML5Backend <span class="token keyword">from</span> <span class="token string">\'react-dnd-html5-backend\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">\'immutability-helper\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> dragingIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BodyRow</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> connectDragSource<span class="token punctuation">,</span> connectDropTarget<span class="token punctuation">,</span> moveRow<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>restProps<span class="token punctuation">.</span>style<span class="token punctuation">,</span> cursor<span class="token operator">:</span> <span class="token string">\'move\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> className <span class="token punctuation">}</span> <span class="token operator">=</span> restProps<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isOver<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>restProps<span class="token punctuation">.</span>index <span class="token operator">></span> dragingIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        className <span class="token operator">+=</span> <span class="token string">\' drop-over-downward\'</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>restProps<span class="token punctuation">.</span>index <span class="token operator">&lt;</span> dragingIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        className <span class="token operator">+=</span> <span class="token string">\' drop-over-upward\'</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token function">connectDragSource</span><span class="token punctuation">(</span>\n      <span class="token function">connectDropTarget</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">restProps</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> rowSource <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">beginDrag</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    dragingIndex <span class="token operator">=</span> props<span class="token punctuation">.</span>index<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      index<span class="token operator">:</span> props<span class="token punctuation">.</span>index<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rowTarget <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> monitor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> dragIndex <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> hoverIndex <span class="token operator">=</span> props<span class="token punctuation">.</span>index<span class="token punctuation">;</span>\n\n    <span class="token comment">// Don\'t replace items with themselves</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> hoverIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// Time to actually perform the action</span>\n    props<span class="token punctuation">.</span><span class="token function">moveRow</span><span class="token punctuation">(</span>dragIndex<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Note: we\'re mutating the monitor item here!</span>\n    <span class="token comment">// Generally it\'s better to avoid mutations,</span>\n    <span class="token comment">// but it\'s good here for the sake of performance</span>\n    <span class="token comment">// to avoid expensive index searches.</span>\n    monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index <span class="token operator">=</span> hoverIndex<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> DragableBodyRow <span class="token operator">=</span> <span class="token function">DropTarget</span><span class="token punctuation">(</span><span class="token string">\'row\'</span><span class="token punctuation">,</span> rowTarget<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">connect<span class="token punctuation">,</span> monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  connectDropTarget<span class="token operator">:</span> connect<span class="token punctuation">.</span><span class="token function">dropTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  isOver<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>\n  <span class="token function">DragSource</span><span class="token punctuation">(</span><span class="token string">\'row\'</span><span class="token punctuation">,</span> rowSource<span class="token punctuation">,</span> <span class="token parameter">connect</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    connectDragSource<span class="token operator">:</span> connect<span class="token punctuation">.</span><span class="token function">dragSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>BodyRow<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">DragSortingTable</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    data<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n        age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n        age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n        age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    body<span class="token operator">:</span> <span class="token punctuation">{</span>\n      row<span class="token operator">:</span> DragableBodyRow<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">moveRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dragIndex<span class="token punctuation">,</span> hoverIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> dragRow <span class="token operator">=</span> data<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>\n      <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        data<span class="token operator">:</span> <span class="token punctuation">{</span>\n          $splice<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n          <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n          <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">}</span></span>\n          <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>components<span class="token punctuation">}</span></span>\n          <span class="token attr-name">onRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">record<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            index<span class="token punctuation">,</span>\n            moveRow<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>moveRow<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragSortingTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=a(3369),p=e(a(3370)),o=e(a(3801));function e(n){return n&&n.__esModule?n:{default:n}}function c(n){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function u(){return(u=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function l(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function k(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function i(n,s){if(null==n)return{};var a,t,p=function(n,s){if(null==n)return{};var a,t,p={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||(p[a]=n[a]);return p}(n,s);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(p[a]=n[a])}return p}function r(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function d(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function g(n,s,a){return s&&d(n.prototype,s),a&&d(n,a),n}function m(n,s){return!s||"object"!==c(s)&&"function"!=typeof s?h(n):s}function h(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function y(n){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function f(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&b(n,s)}function b(n,s){return(b=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}var w=-1,v=function(s){function a(){return r(this,a),m(this,y(a).apply(this,arguments))}return f(a,s),g(a,[{key:"render",value:function(){var s=this.props,a=s.isOver,t=s.connectDragSource,p=s.connectDropTarget,o=(s.moveRow,i(s,["isOver","connectDragSource","connectDropTarget","moveRow"])),e=function(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?l(Object(a),!0).forEach((function(s){k(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}({},o.style,{cursor:"move"}),c=o.className;return a&&(o.index>w&&(c+=" drop-over-downward"),o.index<w&&(c+=" drop-over-upward")),t(p(n.createElement("tr",u({},o,{className:c,style:e}))))}}]),a}(n.Component),x={beginDrag:function(n){return w=n.index,{index:n.index}}},S=(0,t.DropTarget)("row",{drop:function(n,s){var a=s.getItem().index,t=n.index;a!==t&&(n.moveRow(a,t),s.getItem().index=t)}},(function(n,s){return{connectDropTarget:n.dropTarget(),isOver:s.isOver()}}))((0,t.DragSource)("row",x,(function(n){return{connectDragSource:n.dragSource()}}))(v)),C=[{title:"Name",dataIndex:"name",key:"name"},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"}],I=function(a){function e(){var n,s;r(this,e);for(var a=arguments.length,t=new Array(a),p=0;p<a;p++)t[p]=arguments[p];return k(h(s=m(this,(n=y(e)).call.apply(n,[this].concat(t)))),"state",{data:[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"}]}),k(h(s),"components",{body:{row:S}}),k(h(s),"moveRow",(function(n,a){var t=s.state.data[n];s.setState((0,o.default)(s.state,{data:{$splice:[[n,1],[a,0,t]]}}))})),s}return f(e,a),g(e,[{key:"render",value:function(){var a=this;return n.createElement(t.DndProvider,{backend:p.default},n.createElement(s.Table,{columns:C,dataSource:this.state.data,components:this.components,onRow:function(n,s){return{index:s,moveRow:a.moveRow}}}))}}]),e}(n.Component);return n.createElement(I,null)},style:"#components-table-demo-drag-sorting tr.drop-over-downward td {\n  border-bottom: 2px dashed #1890ff;\n}\n\n#components-table-demo-drag-sorting tr.drop-over-upward td {\n  border-top: 2px dashed #1890ff;\n}",highlightedStyle:'<span class="token selector"><span class="token id">#components-table-demo-drag-sorting</span> tr<span class="token class">.drop-over-downward</span> td </span><span class="token punctuation">{</span>\n  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token id">#components-table-demo-drag-sorting</span> tr<span class="token class">.drop-over-upward</span> td </span><span class="token punctuation">{</span>\n  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},3802:function(n,s,a){n.exports={content:{"zh-CN":[["p","选择不同配置组合查看效果。"]],"en-US":[["p","Select different settings to see the result."]]},meta:{order:100,title:{"en-US":"Dynamic Settings","zh-CN":"动态控制表格属性"},filename:"components/table/demo/dynamic-settings.md",id:"components-table-demo-dynamic-settings"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'action\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token punctuation">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-dropdown-link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          More actions <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DownOutlined</span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2`</span></span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park`</span></span><span class="token punctuation">,</span>\n    description<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`My name is John Brown, I am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2 years old, living in New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park.`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> expandable <span class="token operator">=</span> <span class="token punctuation">{</span> expandedRowRender<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">\'Here is title\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> showHeader <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> footer <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">\'Here is footer\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> pagination <span class="token operator">=</span> <span class="token punctuation">{</span> position<span class="token punctuation">:</span> <span class="token string">\'bottom\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bordered<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    pagination<span class="token punctuation">,</span>\n    size<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n    expandable<span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>\n    showHeader<span class="token punctuation">,</span>\n    footer<span class="token punctuation">,</span>\n    rowSelection<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    scroll<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>\n    hasData<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    tableLayout<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleToggle <span class="token operator">=</span> prop <span class="token operator">=</span><span class="token operator">></span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">:</span> enable <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleSizeChange <span class="token operator">=</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> size<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleTableLayoutChange <span class="token operator">=</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> tableLayout<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleExpandChange <span class="token operator">=</span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> expandable<span class="token punctuation">:</span> enable <span class="token operator">?</span> expandable <span class="token punctuation">:</span> undefined <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleEllipsisChange <span class="token operator">=</span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> ellipsis<span class="token punctuation">:</span> enable <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleTitleChange <span class="token operator">=</span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> enable <span class="token operator">?</span> title <span class="token punctuation">:</span> undefined <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleHeaderChange <span class="token operator">=</span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showHeader<span class="token punctuation">:</span> enable <span class="token operator">?</span> showHeader <span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleFooterChange <span class="token operator">=</span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> footer<span class="token punctuation">:</span> enable <span class="token operator">?</span> footer <span class="token punctuation">:</span> undefined <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleRowSelectionChange <span class="token operator">=</span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> rowSelection<span class="token punctuation">:</span> enable <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">:</span> undefined <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleYScrollChange <span class="token operator">=</span> enable <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> yScroll<span class="token punctuation">:</span> enable <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleXScrollChange <span class="token operator">=</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> xScroll<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleDataChange <span class="token operator">=</span> hasData <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hasData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handlePaginationChange <span class="token operator">=</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      pagination<span class="token punctuation">:</span> value <span class="token operator">===</span> <span class="token string">\'none\'</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span> position<span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> xScroll<span class="token punctuation">,</span> yScroll<span class="token punctuation">,</span> <span class="token operator">...</span>state <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> scroll <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>yScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      scroll<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">240</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      scroll<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token string">\'100vw\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> tableColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> ellipsis<span class="token punctuation">:</span> state<span class="token punctuation">.</span>ellipsis <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll <span class="token operator">===</span> <span class="token string">\'fixed\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      tableColumns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      tableColumns<span class="token punctuation">[</span>tableColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token string">\'right\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span>\n          <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span>\n          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>components-table-demo-control-bar<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>bordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleToggle</span><span class="token punctuation">(</span><span class="token string">\'bordered\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>loading<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleToggle</span><span class="token punctuation">(</span><span class="token string">\'loading\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleTitleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Column</span> <span class="token attr-name">Header"</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>showHeader<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleHeaderChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>footer<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleFooterChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Expandable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>expandable<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleExpandChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleRowSelectionChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Fixed</span> <span class="token attr-name">Header"</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>yScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleYScrollChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Has</span> <span class="token attr-name">Data"</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>hasData<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleDataChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Ellipsis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>ellipsis<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleEllipsisChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Group</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>size<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSizeChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Group</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Table</span> <span class="token attr-name">Scroll"</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Group</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>xScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleXScrollChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>undefined<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Scroll<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed Columns<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Group</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Table</span> <span class="token attr-name">Layout"</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Group</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>tableLayout<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleTableLayoutChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>undefined<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Group</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Group</span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>pagination <span class="token operator">?</span> state<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>position <span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlePaginationChange<span class="token punctuation">}</span></span>\n            <span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>both<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Both<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio.Button</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>None<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio.Group</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>Table\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">}</span>\n          columns<span class="token operator">=</span><span class="token punctuation">{</span>tableColumns<span class="token punctuation">}</span>\n          dataSource<span class="token operator">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>hasData <span class="token operator">?</span> data <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span>\n          scroll<span class="token operator">=</span><span class="token punctuation">{</span>scroll<span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">text</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'action\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-dropdown-link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          More actions <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">My name is John Brown, I am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2 years old, living in New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> expandable <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">title</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'Here is title\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> showHeader <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">footer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'Here is footer\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> pagination <span class="token operator">=</span> <span class="token punctuation">{</span> position<span class="token operator">:</span> <span class="token string">\'bottom\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bordered<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    pagination<span class="token punctuation">,</span>\n    size<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n    expandable<span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    showHeader<span class="token punctuation">,</span>\n    footer<span class="token punctuation">,</span>\n    rowSelection<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    scroll<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n    hasData<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    tableLayout<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleToggle</span> <span class="token operator">=</span> <span class="token parameter">prop</span> <span class="token operator">=></span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token operator">:</span> enable <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleSizeChange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> size<span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleTableLayoutChange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> tableLayout<span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleExpandChange</span> <span class="token operator">=</span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> expandable<span class="token operator">:</span> enable <span class="token operator">?</span> expandable <span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleEllipsisChange</span> <span class="token operator">=</span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> ellipsis<span class="token operator">:</span> enable <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleTitleChange</span> <span class="token operator">=</span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> enable <span class="token operator">?</span> title <span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleHeaderChange</span> <span class="token operator">=</span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showHeader<span class="token operator">:</span> enable <span class="token operator">?</span> showHeader <span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleFooterChange</span> <span class="token operator">=</span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> footer<span class="token operator">:</span> enable <span class="token operator">?</span> footer <span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleRowSelectionChange</span> <span class="token operator">=</span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> rowSelection<span class="token operator">:</span> enable <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleYScrollChange</span> <span class="token operator">=</span> <span class="token parameter">enable</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> yScroll<span class="token operator">:</span> enable <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleXScrollChange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> xScroll<span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleDataChange</span> <span class="token operator">=</span> <span class="token parameter">hasData</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hasData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handlePaginationChange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      pagination<span class="token operator">:</span> value <span class="token operator">===</span> <span class="token string">\'none\'</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token punctuation">{</span> position<span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> xScroll<span class="token punctuation">,</span> yScroll<span class="token punctuation">,</span> <span class="token operator">...</span>state <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> scroll <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>yScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      scroll<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">240</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      scroll<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token string">\'100vw\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> tableColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> ellipsis<span class="token operator">:</span> state<span class="token punctuation">.</span>ellipsis <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll <span class="token operator">===</span> <span class="token string">\'fixed\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      tableColumns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      tableColumns<span class="token punctuation">[</span>tableColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token string">\'right\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>\n          <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span>\n          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>components-table-demo-control-bar<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>bordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleToggle</span><span class="token punctuation">(</span><span class="token string">\'bordered\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>loading<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleToggle</span><span class="token punctuation">(</span><span class="token string">\'loading\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleTitleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Column Header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>showHeader<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleHeaderChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>footer<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleFooterChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Expandable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>expandable<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleExpandChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleRowSelectionChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Fixed Header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>yScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleYScrollChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Has Data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>hasData<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleDataChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Ellipsis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>state<span class="token punctuation">.</span>ellipsis<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleEllipsisChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>size<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSizeChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Table Scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleXScrollChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Scroll<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed Columns<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Table Layout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>tableLayout<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleTableLayoutChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>pagination <span class="token operator">?</span> state<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>position <span class="token operator">:</span> <span class="token string">\'none\'</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlePaginationChange<span class="token punctuation">}</span></span>\n            <span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>both<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Both<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>None<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n          <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">this</span><span class="token punctuation">.</span><span class="token attr-value">state</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableColumns<span class="token punctuation">}</span></span>\n          <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>hasData <span class="token operator">?</span> data <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>scroll<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=a(17);function p(n){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(){return(o=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function e(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function c(n,s){if(null==n)return{};var a,t,p=function(n,s){if(null==n)return{};var a,t,p={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||(p[a]=n[a]);return p}(n,s);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(p[a]=n[a])}return p}function u(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function l(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function k(n,s){return!s||"object"!==p(s)&&"function"!=typeof s?r(n):s}function i(n){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function r(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function d(n,s){return(d=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function g(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}for(var m=[{title:"Name",dataIndex:"name",key:"name",render:function(s){return n.createElement("a",null,s)}},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"},{title:"Action",key:"action",render:function(){return n.createElement("span",null,n.createElement("a",{style:{marginRight:16}},"Delete"),n.createElement("a",{className:"ant-dropdown-link"},"More actions ",n.createElement(t.DownOutlined,null)))}}],h=[],y=1;y<=10;y++)h.push({key:y,name:"John Brown",age:"".concat(y,"2"),address:"New York No. ".concat(y," Lake Park"),description:"My name is John Brown, I am ".concat(y,"2 years old, living in New York No. ").concat(y," Lake Park.")});var f={expandedRowRender:function(s){return n.createElement("p",null,s.description)}},b=function(){return"Here is title"},w=function(){return"Here is footer"},v={position:"bottom"},x=function(a){function t(){var n,s;u(this,t);for(var a=arguments.length,p=new Array(a),o=0;o<a;o++)p[o]=arguments[o];return g(r(s=k(this,(n=i(t)).call.apply(n,[this].concat(p)))),"state",{bordered:!1,loading:!1,pagination:v,size:"default",expandable:f,title:void 0,showHeader:!0,footer:w,rowSelection:{},scroll:void 0,hasData:!0,tableLayout:void 0}),g(r(s),"handleToggle",(function(n){return function(a){s.setState(g({},n,a))}})),g(r(s),"handleSizeChange",(function(n){s.setState({size:n.target.value})})),g(r(s),"handleTableLayoutChange",(function(n){s.setState({tableLayout:n.target.value})})),g(r(s),"handleExpandChange",(function(n){s.setState({expandable:n?f:void 0})})),g(r(s),"handleEllipsisChange",(function(n){s.setState({ellipsis:n})})),g(r(s),"handleTitleChange",(function(n){s.setState({title:n?b:void 0})})),g(r(s),"handleHeaderChange",(function(n){s.setState({showHeader:!!n})})),g(r(s),"handleFooterChange",(function(n){s.setState({footer:n?w:void 0})})),g(r(s),"handleRowSelectionChange",(function(n){s.setState({rowSelection:n?{}:void 0})})),g(r(s),"handleYScrollChange",(function(n){s.setState({yScroll:n})})),g(r(s),"handleXScrollChange",(function(n){s.setState({xScroll:n.target.value})})),g(r(s),"handleDataChange",(function(n){s.setState({hasData:n})})),g(r(s),"handlePaginationChange",(function(n){var a=n.target.value;s.setState({pagination:"none"!==a&&{position:a}})})),s}var p,y,x;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&d(n,s)}(t,a),p=t,(y=[{key:"render",value:function(){var a=this.state,t=a.xScroll,p=a.yScroll,u=c(a,["xScroll","yScroll"]),l={};p&&(l.y=240),t&&(l.x="100vw");var k=m.map((function(n){return function(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?e(Object(a),!0).forEach((function(s){g(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}({},n,{ellipsis:u.ellipsis})}));return"fixed"===t&&(k[0].fixed=!0,k[k.length-1].fixed="right"),n.createElement("div",null,n.createElement(s.Form,{layout:"inline",className:"components-table-demo-control-bar",style:{marginBottom:16}},n.createElement(s.Form.Item,{label:"Bordered"},n.createElement(s.Switch,{checked:u.bordered,onChange:this.handleToggle("bordered")})),n.createElement(s.Form.Item,{label:"loading"},n.createElement(s.Switch,{checked:u.loading,onChange:this.handleToggle("loading")})),n.createElement(s.Form.Item,{label:"Title"},n.createElement(s.Switch,{checked:!!u.title,onChange:this.handleTitleChange})),n.createElement(s.Form.Item,{label:"Column Header"},n.createElement(s.Switch,{checked:!!u.showHeader,onChange:this.handleHeaderChange})),n.createElement(s.Form.Item,{label:"Footer"},n.createElement(s.Switch,{checked:!!u.footer,onChange:this.handleFooterChange})),n.createElement(s.Form.Item,{label:"Expandable"},n.createElement(s.Switch,{checked:!!u.expandable,onChange:this.handleExpandChange})),n.createElement(s.Form.Item,{label:"Checkbox"},n.createElement(s.Switch,{checked:!!u.rowSelection,onChange:this.handleRowSelectionChange})),n.createElement(s.Form.Item,{label:"Fixed Header"},n.createElement(s.Switch,{checked:!!p,onChange:this.handleYScrollChange})),n.createElement(s.Form.Item,{label:"Has Data"},n.createElement(s.Switch,{checked:!!u.hasData,onChange:this.handleDataChange})),n.createElement(s.Form.Item,{label:"Ellipsis"},n.createElement(s.Switch,{checked:!!u.ellipsis,onChange:this.handleEllipsisChange})),n.createElement(s.Form.Item,{label:"Size"},n.createElement(s.Radio.Group,{value:u.size,onChange:this.handleSizeChange},n.createElement(s.Radio.Button,{value:"default"},"Default"),n.createElement(s.Radio.Button,{value:"middle"},"Middle"),n.createElement(s.Radio.Button,{value:"small"},"Small"))),n.createElement(s.Form.Item,{label:"Table Scroll"},n.createElement(s.Radio.Group,{value:t,onChange:this.handleXScrollChange},n.createElement(s.Radio.Button,{value:void 0},"Unset"),n.createElement(s.Radio.Button,{value:"scroll"},"Scroll"),n.createElement(s.Radio.Button,{value:"fixed"},"Fixed Columns"))),n.createElement(s.Form.Item,{label:"Table Layout"},n.createElement(s.Radio.Group,{value:u.tableLayout,onChange:this.handleTableLayoutChange},n.createElement(s.Radio.Button,{value:void 0},"Unset"),n.createElement(s.Radio.Button,{value:"fixed"},"Fixed"))),n.createElement(s.Form.Item,{label:"Pagination"},n.createElement(s.Radio.Group,{value:u.pagination?u.pagination.position:"none",onChange:this.handlePaginationChange},n.createElement(s.Radio.Button,{value:"top"},"Top"),n.createElement(s.Radio.Button,{value:"bottom"},"Bottom"),n.createElement(s.Radio.Button,{value:"both"},"Both"),n.createElement(s.Radio.Button,{value:"none"},"None")))),n.createElement(s.Table,o({},this.state,{columns:k,dataSource:u.hasData?h:null,scroll:l})))}}])&&l(p.prototype,y),x&&l(p,x),t}(n.Component);return n.createElement(x,null)},style:"\n.components-table-demo-control-bar .ant-form-item {\n  margin-right: 16px;\n  margin-bottom: 8px;\n}\n"}},3803:function(n,s,a){n.exports={content:{"zh-CN":[["p","带单元格编辑功能的表格。"]],"en-US":[["p","Table with editable cells."]]},meta:{order:23,title:{"en-US":"Editable Cells","zh-CN":"可编辑单元格"},filename:"components/table/demo/edit-cell.md",id:"components-table-demo-edit-cell"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Form } from <span class="token string">\'antd\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> EditableContext <span class="token operator">=</span> React<span class="token punctuation">.</span>createContext<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\ninterface Item {\n  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  age<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n}\n\ninterface EditableRowProps {\n  index<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> EditableRow<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>EditableRowProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ index<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Form form<span class="token operator">=</span>{form} component<span class="token operator">=</span>{<span class="token boolean">false</span>}<span class="token operator">></span>\n      <span class="token operator">&lt;</span>EditableContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span>{form}<span class="token operator">></span>\n        <span class="token operator">&lt;</span>tr {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>EditableContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\ninterface EditableCellProps {\n  title<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>\n  editable<span class="token punctuation">:</span> boolean<span class="token comment" spellcheck="true">;</span>\n  children<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>\n  dataIndex<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  record<span class="token punctuation">:</span> Item<span class="token comment" spellcheck="true">;</span>\n  handleSave<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> EditableCell<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>EditableCellProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span>{\n  title<span class="token punctuation">,</span>\n  editable<span class="token punctuation">,</span>\n  children<span class="token punctuation">,</span>\n  dataIndex<span class="token punctuation">,</span>\n  record<span class="token punctuation">,</span>\n  handleSave<span class="token punctuation">,</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps\n}<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>editing<span class="token punctuation">,</span> setEditing<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> form <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>EditableContext<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>editing<span class="token punctuation">)</span> {\n      inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token punctuation">,</span> <span class="token punctuation">[</span>editing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> toggleEdit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token function">setEditing</span><span class="token punctuation">(</span>!editing<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span>{ <span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">:</span> record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span> }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> save <span class="token operator">=</span> async e <span class="token operator">=</span><span class="token operator">></span> {\n    try {\n      <span class="token keyword">const</span> values <span class="token operator">=</span> await form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n      <span class="token function">toggleEdit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      <span class="token function">handleSave</span><span class="token punctuation">(</span>{ <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>record<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>values }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    } catch <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> {\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Save failed:\'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token comment" spellcheck="true">;</span>\n\n  let childNode <span class="token operator">=</span> children<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>editable<span class="token punctuation">)</span> {\n    childNode <span class="token operator">=</span> editing <span class="token operator">?</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item\n        style<span class="token operator">=</span>{{ margin<span class="token punctuation">:</span> <span class="token number">0</span> }}\n        name<span class="token operator">=</span>{dataIndex}\n        rules<span class="token operator">=</span>{<span class="token punctuation">[</span>\n          {\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            message<span class="token punctuation">:</span> `${title} is required<span class="token punctuation">.</span>`<span class="token punctuation">,</span>\n          }<span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>}\n      <span class="token operator">></span>\n        <span class="token operator">&lt;</span>Input ref<span class="token operator">=</span>{inputRef} onPressEnter<span class="token operator">=</span>{save} onBlur<span class="token operator">=</span>{save} <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>\n    <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"editable-cell-value-wrap"</span> style<span class="token operator">=</span>{{ paddingRight<span class="token punctuation">:</span> <span class="token number">24</span> }} onClick<span class="token operator">=</span>{toggleEdit}<span class="token operator">></span>\n        {children}\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }\n\n  return <span class="token operator">&lt;</span>td {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps}<span class="token operator">></span>{childNode}<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nclass EditableTable extends React<span class="token punctuation">.</span>Component {\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> {\n    <span class="token function">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    this<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      {\n        title<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token string">\'30%\'</span><span class="token punctuation">,</span>\n        editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      {\n        title<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      {\n        title<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      {\n        title<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        render<span class="token punctuation">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>\n          this<span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>Popconfirm title<span class="token operator">=</span><span class="token string">"Sure to delete?"</span> onConfirm<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> this<span class="token punctuation">.</span><span class="token function">handleDelete</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span>}<span class="token operator">></span>\n              <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>Popconfirm<span class="token operator">></span>\n          <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n    this<span class="token punctuation">.</span>state <span class="token operator">=</span> {\n      dataSource<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          key<span class="token punctuation">:</span> <span class="token string">\'0\'</span><span class="token punctuation">,</span>\n          name<span class="token punctuation">:</span> <span class="token string">\'Edward King 0\'</span><span class="token punctuation">,</span>\n          age<span class="token punctuation">:</span> <span class="token string">\'32\'</span><span class="token punctuation">,</span>\n          address<span class="token punctuation">:</span> <span class="token string">\'London, Park Lane no. 0\'</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n          key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          name<span class="token punctuation">:</span> <span class="token string">\'Edward King 1\'</span><span class="token punctuation">,</span>\n          age<span class="token punctuation">:</span> <span class="token string">\'32\'</span><span class="token punctuation">,</span>\n          address<span class="token punctuation">:</span> <span class="token string">\'London, Park Lane no. 1\'</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      count<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    }<span class="token comment" spellcheck="true">;</span>\n  }\n\n  handleDelete <span class="token operator">=</span> key <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>this<span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{ dataSource<span class="token punctuation">:</span> dataSource<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item<span class="token punctuation">.</span>key !<span class="token operator">==</span> key<span class="token punctuation">)</span> }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  handleAdd <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> { count<span class="token punctuation">,</span> dataSource } <span class="token operator">=</span> this<span class="token punctuation">.</span>state<span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> newData <span class="token operator">=</span> {\n      key<span class="token punctuation">:</span> count<span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> `Edward King ${count}`<span class="token punctuation">,</span>\n      age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n      address<span class="token punctuation">:</span> `London<span class="token punctuation">,</span> Park Lane no<span class="token punctuation">.</span> ${count}`<span class="token punctuation">,</span>\n    }<span class="token comment" spellcheck="true">;</span>\n    this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{\n      dataSource<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">,</span> newData<span class="token punctuation">]</span><span class="token punctuation">,</span>\n      count<span class="token punctuation">:</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  handleSave <span class="token operator">=</span> row <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>this<span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> row<span class="token punctuation">.</span>key <span class="token operator">==</span><span class="token operator">=</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> {\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>item<span class="token punctuation">,</span>\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>row<span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{ dataSource<span class="token punctuation">:</span> newData }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n    <span class="token keyword">const</span> { dataSource } <span class="token operator">=</span> this<span class="token punctuation">.</span>state<span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> components <span class="token operator">=</span> {\n      body<span class="token punctuation">:</span> {\n        row<span class="token punctuation">:</span> EditableRow<span class="token punctuation">,</span>\n        cell<span class="token punctuation">:</span> EditableCell<span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> this<span class="token punctuation">.</span>columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>col <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>!col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> {\n        return col<span class="token comment" spellcheck="true">;</span>\n      }\n      return {\n        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>col<span class="token punctuation">,</span>\n        onCell<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n          record<span class="token punctuation">,</span>\n          editable<span class="token punctuation">:</span> col<span class="token punctuation">.</span>editable<span class="token punctuation">,</span>\n          dataIndex<span class="token punctuation">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>\n          title<span class="token punctuation">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n          handleSave<span class="token punctuation">:</span> this<span class="token punctuation">.</span>handleSave<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      }<span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    return <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span>{this<span class="token punctuation">.</span>handleAdd} type<span class="token operator">=</span><span class="token string">"primary"</span> style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> }}<span class="token operator">></span>\n          Add a row\n        <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>Table\n          components<span class="token operator">=</span>{components}\n          rowClassName<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">\'editable-row\'</span>}\n          bordered\n          dataSource<span class="token operator">=</span>{dataSource}\n          columns<span class="token operator">=</span>{columns}\n        <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }\n}\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>EditableTable <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> EditableContext <span class="token operator">=</span> React<span class="token punctuation">.</span>createContext<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>any</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>\n  key<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  age<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  address<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">EditableRowProps</span> <span class="token punctuation">{</span>\n  index<span class="token operator">:</span> number<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> EditableRow<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableRowProps</span></span><span class="token punctuation">></span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EditableContext.Provider</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">EditableCellProps</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>\n  editable<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>\n  dataIndex<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  record<span class="token operator">:</span> Item<span class="token punctuation">;</span>\n  <span class="token function-variable function">handleSave</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record<span class="token operator">:</span> Item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> EditableCell<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableCellProps</span></span><span class="token punctuation">></span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n  title<span class="token punctuation">,</span>\n  editable<span class="token punctuation">,</span>\n  children<span class="token punctuation">,</span>\n  dataIndex<span class="token punctuation">,</span>\n  record<span class="token punctuation">,</span>\n  handleSave<span class="token punctuation">,</span>\n  <span class="token operator">...</span>restProps\n<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>editing<span class="token punctuation">,</span> setEditing<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> form <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>EditableContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>editing<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>editing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">toggleEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setEditing</span><span class="token punctuation">(</span><span class="token operator">!</span>editing<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token operator">:</span> record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token function">toggleEdit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">handleSave</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>record<span class="token punctuation">,</span> <span class="token operator">...</span>values <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Save failed:\'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> childNode <span class="token operator">=</span> children<span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    childNode <span class="token operator">=</span> editing <span class="token operator">?</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is required.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span></span> <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token attr-name">onBlur</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editable-cell-value-wrap<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> paddingRight<span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggleEdit<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">restProps</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>childNode<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">EditableTable</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token string">\'30%\'</span><span class="token punctuation">,</span>\n        editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Sure to delete?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleDelete</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      dataSource<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          key<span class="token operator">:</span> <span class="token string">\'0\'</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">\'Edward King 0\'</span><span class="token punctuation">,</span>\n          age<span class="token operator">:</span> <span class="token string">\'32\'</span><span class="token punctuation">,</span>\n          address<span class="token operator">:</span> <span class="token string">\'London, Park Lane no. 0\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">\'Edward King 1\'</span><span class="token punctuation">,</span>\n          age<span class="token operator">:</span> <span class="token string">\'32\'</span><span class="token punctuation">,</span>\n          address<span class="token operator">:</span> <span class="token string">\'London, Park Lane no. 1\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      count<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleDelete</span> <span class="token operator">=</span> <span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dataSource<span class="token operator">:</span> dataSource<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>key <span class="token operator">!==</span> key<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> dataSource <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> count<span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n      address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      dataSource<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>dataSource<span class="token punctuation">,</span> newData<span class="token punctuation">]</span><span class="token punctuation">,</span>\n      count<span class="token operator">:</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleSave</span> <span class="token operator">=</span> <span class="token parameter">row</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> row<span class="token punctuation">.</span>key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>item<span class="token punctuation">,</span>\n      <span class="token operator">...</span>row<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dataSource<span class="token operator">:</span> newData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>\n      body<span class="token operator">:</span> <span class="token punctuation">{</span>\n        row<span class="token operator">:</span> EditableRow<span class="token punctuation">,</span>\n        cell<span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">col</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> col<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>col<span class="token punctuation">,</span>\n        <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          record<span class="token punctuation">,</span>\n          editable<span class="token operator">:</span> col<span class="token punctuation">.</span>editable<span class="token punctuation">,</span>\n          dataIndex<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>\n          title<span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n          handleSave<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleSave<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleAdd<span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          Add a row\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n          <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>\n          <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'editable-row\'</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">bordered</span>\n          <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>\n          <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> EditableContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">EditableRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EditableContext.Provider</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">EditableCell</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n  title<span class="token punctuation">,</span>\n  editable<span class="token punctuation">,</span>\n  children<span class="token punctuation">,</span>\n  dataIndex<span class="token punctuation">,</span>\n  record<span class="token punctuation">,</span>\n  handleSave<span class="token punctuation">,</span>\n  <span class="token operator">...</span>restProps\n<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>editing<span class="token punctuation">,</span> setEditing<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> form <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>EditableContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>editing<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>editing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">toggleEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setEditing</span><span class="token punctuation">(</span><span class="token operator">!</span>editing<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token operator">:</span> record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">toggleEdit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">handleSave</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>record<span class="token punctuation">,</span> <span class="token operator">...</span>values <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Save failed:\'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> childNode <span class="token operator">=</span> children<span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    childNode <span class="token operator">=</span> editing <span class="token operator">?</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          margin<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is required.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span></span> <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token attr-name">onBlur</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editable-cell-value-wrap<span class="token punctuation">"</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          paddingRight<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggleEdit<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">restProps</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>childNode<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">EditableTable</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token string">\'30%\'</span><span class="token punctuation">,</span>\n        editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Sure to delete?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleDelete</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      dataSource<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          key<span class="token operator">:</span> <span class="token string">\'0\'</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">\'Edward King 0\'</span><span class="token punctuation">,</span>\n          age<span class="token operator">:</span> <span class="token string">\'32\'</span><span class="token punctuation">,</span>\n          address<span class="token operator">:</span> <span class="token string">\'London, Park Lane no. 0\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">\'Edward King 1\'</span><span class="token punctuation">,</span>\n          age<span class="token operator">:</span> <span class="token string">\'32\'</span><span class="token punctuation">,</span>\n          address<span class="token operator">:</span> <span class="token string">\'London, Park Lane no. 1\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      count<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleDelete</span> <span class="token operator">=</span> <span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      dataSource<span class="token operator">:</span> dataSource<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>key <span class="token operator">!==</span> key<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> dataSource <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> count<span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n      address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      dataSource<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>dataSource<span class="token punctuation">,</span> newData<span class="token punctuation">]</span><span class="token punctuation">,</span>\n      count<span class="token operator">:</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleSave</span> <span class="token operator">=</span> <span class="token parameter">row</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> row<span class="token punctuation">.</span>key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> <span class="token operator">...</span>row <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      dataSource<span class="token operator">:</span> newData<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>\n      body<span class="token operator">:</span> <span class="token punctuation">{</span>\n        row<span class="token operator">:</span> EditableRow<span class="token punctuation">,</span>\n        cell<span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">col</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> col<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>col<span class="token punctuation">,</span>\n        <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          record<span class="token punctuation">,</span>\n          editable<span class="token operator">:</span> col<span class="token punctuation">.</span>editable<span class="token punctuation">,</span>\n          dataIndex<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>\n          title<span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n          handleSave<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleSave<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleAdd<span class="token punctuation">}</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            marginBottom<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          Add a row\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n          <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>\n          <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'editable-row\'</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">bordered</span>\n          <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>\n          <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n=a(0),s=(a(14),a(5));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n){return function(n){if(Array.isArray(n)){for(var s=0,a=new Array(n.length);s<n.length;s++)a[s]=n[s];return a}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n){return(e=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function c(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function u(n,s){return(u=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function l(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function k(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?l(Object(a),!0).forEach((function(s){r(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function i(n,s,a,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void a(n)}c.done?s(u):Promise.resolve(u).then(t,p)}function r(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function d(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var a=[],t=!0,p=!1,o=void 0;try{for(var e,c=n[Symbol.iterator]();!(t=(e=c.next()).done)&&(a.push(e.value),!s||a.length!==s);t=!0);}catch(n){p=!0,o=n}finally{try{t||null==c.return||c.return()}finally{if(p)throw o}}return a}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function g(n,s){if(null==n)return{};var a,t,p=function(n,s){if(null==n)return{};var a,t,p={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||(p[a]=n[a]);return p}(n,s);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(p[a]=n[a])}return p}var m=n.createContext(),h=function(a){a.index;var t=g(a,["index"]),p=d(s.Form.useForm(),1)[0];return n.createElement(s.Form,{form:p,component:!1},n.createElement(m.Provider,{value:p},n.createElement("tr",t)))},y=function(a){var t=a.title,p=a.editable,o=a.children,e=a.dataIndex,c=a.record,u=a.handleSave,l=g(a,["title","editable","children","dataIndex","record","handleSave"]),h=d(n.useState(!1),2),y=h[0],f=h[1],b=n.useRef(),w=n.useContext(m);n.useEffect((function(){y&&b.current.focus()}),[y]);var v=function(){f(!y),w.setFieldsValue(r({},e,c[e]))},x=function(){var n,s=(n=regeneratorRuntime.mark((function n(s){var a;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,w.validateFields();case 3:a=n.sent,v(),u(k({},c,{},a)),n.next=11;break;case 8:n.prev=8,n.t0=n.catch(0),console.log("Save failed:",n.t0);case 11:case"end":return n.stop()}}),n,null,[[0,8]])})),function(){var s=this,a=arguments;return new Promise((function(t,p){var o=n.apply(s,a);function e(n){i(o,t,p,e,c,"next",n)}function c(n){i(o,t,p,e,c,"throw",n)}e(void 0)}))});return function(n){return s.apply(this,arguments)}}(),S=o;return p&&(S=y?n.createElement(s.Form.Item,{style:{margin:0},name:e,rules:[{required:!0,message:"".concat(t," is required.")}]},n.createElement(s.Input,{ref:b,onPressEnter:x,onBlur:x})):n.createElement("div",{className:"editable-cell-value-wrap",style:{paddingRight:24},onClick:v},o)),n.createElement("td",l,S)},f=function(a){function l(a){var o,u,i;return function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,l),u=this,i=e(l).call(this,a),o=!i||"object"!==t(i)&&"function"!=typeof i?c(u):i,r(c(o),"handleDelete",(function(n){var s=p(o.state.dataSource);o.setState({dataSource:s.filter((function(s){return s.key!==n}))})})),r(c(o),"handleAdd",(function(){var n=o.state,s=n.count,a=n.dataSource,t={key:s,name:"Edward King ".concat(s),age:32,address:"London, Park Lane no. ".concat(s)};o.setState({dataSource:[].concat(p(a),[t]),count:s+1})})),r(c(o),"handleSave",(function(n){var s=p(o.state.dataSource),a=s.findIndex((function(s){return n.key===s.key})),t=s[a];s.splice(a,1,k({},t,{},n)),o.setState({dataSource:s})})),o.columns=[{title:"name",dataIndex:"name",width:"30%",editable:!0},{title:"age",dataIndex:"age"},{title:"address",dataIndex:"address"},{title:"operation",dataIndex:"operation",render:function(a,t){return o.state.dataSource.length>=1?n.createElement(s.Popconfirm,{title:"Sure to delete?",onConfirm:function(){return o.handleDelete(t.key)}},n.createElement("a",null,"Delete")):null}}],o.state={dataSource:[{key:"0",name:"Edward King 0",age:"32",address:"London, Park Lane no. 0"},{key:"1",name:"Edward King 1",age:"32",address:"London, Park Lane no. 1"}],count:2},o}var i,d,g;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&u(n,s)}(l,a),i=l,(d=[{key:"render",value:function(){var a=this,t=this.state.dataSource,p={body:{row:h,cell:y}},o=this.columns.map((function(n){return n.editable?k({},n,{onCell:function(s){return{record:s,editable:n.editable,dataIndex:n.dataIndex,title:n.title,handleSave:a.handleSave}}}):n}));return n.createElement("div",null,n.createElement(s.Button,{onClick:this.handleAdd,type:"primary",style:{marginBottom:16}},"Add a row"),n.createElement(s.Table,{components:p,rowClassName:function(){return"editable-row"},bordered:!0,dataSource:t,columns:o}))}}])&&o(i.prototype,d),g&&o(i,g),l}(n.Component);return n.createElement(f,null)},style:".editable-cell {\n  position: relative;\n}\n\n.editable-cell-value-wrap {\n  padding: 5px 12px;\n  cursor: pointer;\n}\n\n.editable-row:hover .editable-cell-value-wrap {\n  border: 1px solid #d9d9d9;\n  border-radius: 4px;\n  padding: 4px 11px;\n}\n\n[data-theme='dark'] .editable-row:hover .editable-cell-value-wrap {\n  border: 1px solid #434343;\n}",highlightedStyle:'<span class="token selector"><span class="token class">.editable-cell</span> </span><span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.editable-cell-value-wrap</span> </span><span class="token punctuation">{</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">12</span>px<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.editable-row</span><span class="token pseudo-class">:hover</span> <span class="token class">.editable-cell-value-wrap</span> </span><span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">4</span>px <span class="token number">11</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token attribute">[data-theme=\'dark\']</span> <span class="token class">.editable-row</span><span class="token pseudo-class">:hover</span> <span class="token class">.editable-cell-value-wrap</span> </span><span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#434343</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},3804:function(n,s,a){n.exports={content:{"zh-CN":[["p","带行编辑功能的表格。"]],"en-US":[["p","Table with editable rows."]]},meta:{order:24,title:{"en-US":"Editable Rows","zh-CN":"可编辑行"},filename:"components/table/demo/edit-row.md",id:"components-table-demo-edit-row"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> InputNumber<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Form } from <span class="token string">\'antd\'</span><span class="token comment" spellcheck="true">;</span>\n\ninterface Item {\n  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>\n  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> originData<span class="token punctuation">:</span> Item<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 100; i++) {</span>\n  originData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{\n    key<span class="token punctuation">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> `Edrward ${i}`<span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> `London Park no<span class="token punctuation">.</span> ${i}`<span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\ninterface EditableCellProps {\n  editing<span class="token punctuation">:</span> boolean<span class="token comment" spellcheck="true">;</span>\n  dataIndex<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>\n  title<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>\n  inputType<span class="token punctuation">:</span> <span class="token string">\'number\'</span> | <span class="token string">\'text\'</span><span class="token comment" spellcheck="true">;</span>\n  record<span class="token punctuation">:</span> Item<span class="token comment" spellcheck="true">;</span>\n  index<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>\n  children<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> EditableCell<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>EditableCellProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span>{\n  editing<span class="token punctuation">,</span>\n  dataIndex<span class="token punctuation">,</span>\n  title<span class="token punctuation">,</span>\n  inputType<span class="token punctuation">,</span>\n  record<span class="token punctuation">,</span>\n  index<span class="token punctuation">,</span>\n  children<span class="token punctuation">,</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps\n}<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> inputNode <span class="token operator">=</span> inputType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'number\'</span> <span class="token operator">?</span> <span class="token operator">&lt;</span>InputNumber <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>Input <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>td {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps}<span class="token operator">></span>\n      {editing <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item\n          name<span class="token operator">=</span>{dataIndex}\n          style<span class="token operator">=</span>{{ margin<span class="token punctuation">:</span> <span class="token number">0</span> }}\n          rules<span class="token operator">=</span>{<span class="token punctuation">[</span>\n            {\n              required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              message<span class="token punctuation">:</span> `Please Input ${title}!`<span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n          <span class="token punctuation">]</span>}\n        <span class="token operator">></span>\n          {inputNode}\n        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>\n      <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n        children\n      <span class="token punctuation">)</span>}\n    <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> EditableTable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>originData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>editingKey<span class="token punctuation">,</span> setEditingKey<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> isEditing <span class="token operator">=</span> record <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>key <span class="token operator">==</span><span class="token operator">=</span> editingKey<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> edit <span class="token operator">=</span> record <span class="token operator">=</span><span class="token operator">></span> {\n    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span>{ <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>record }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token function">setEditingKey</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> cancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> save <span class="token operator">=</span> async key <span class="token operator">=</span><span class="token operator">></span> {\n    try {\n      <span class="token keyword">const</span> row <span class="token operator">=</span> await form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n      <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> key <span class="token operator">==</span><span class="token operator">=</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> {\n        <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n        newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> {\n          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>item<span class="token punctuation">,</span>\n          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>row<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      } <span class="token keyword">else</span> {\n        newData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }\n    } catch <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> {\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Validate Failed:\'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      return<span class="token comment" spellcheck="true">;</span>\n    }\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    {\n      title<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> <span class="token string">\'25%\'</span><span class="token punctuation">,</span>\n      editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      title<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> <span class="token string">\'15%\'</span><span class="token punctuation">,</span>\n      editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      title<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> <span class="token string">\'40%\'</span><span class="token punctuation">,</span>\n      editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      title<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      render<span class="token punctuation">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> editable <span class="token operator">=</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return editable <span class="token operator">?</span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>span<span class="token operator">></span>\n            <span class="token operator">&lt;</span>a href<span class="token operator">=</span>"javascript<span class="token punctuation">:</span><span class="token comment" spellcheck="true">;" onClick={() => save(record.key)} style={{ marginRight: 8 }}></span>\n              Save\n            <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>\n            <span class="token operator">&lt;</span>Popconfirm title<span class="token operator">=</span><span class="token string">"Sure to cancel?"</span> onConfirm<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">cancel</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span>}<span class="token operator">></span>\n              <span class="token operator">&lt;</span>a<span class="token operator">></span>Cancel<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>Popconfirm<span class="token operator">></span>\n          <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n        <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>a disabled<span class="token operator">=</span>{editingKey !<span class="token operator">==</span> <span class="token string">\'\'</span>} onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">edit</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span>}<span class="token operator">></span>\n            Edit\n          <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>\n        <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> components <span class="token operator">=</span> {\n    body<span class="token punctuation">:</span> {\n      cell<span class="token punctuation">:</span> EditableCell<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>col <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> {\n      return col<span class="token comment" spellcheck="true">;</span>\n    }\n    return {\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>col<span class="token punctuation">,</span>\n      onCell<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n        record<span class="token punctuation">,</span>\n        inputType<span class="token punctuation">:</span> col<span class="token punctuation">.</span>dataIndex <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'age\'</span> <span class="token operator">?</span> <span class="token string">\'number\'</span> <span class="token punctuation">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>\n        title<span class="token punctuation">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n        editing<span class="token punctuation">:</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    }<span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Form form<span class="token operator">=</span>{form} component<span class="token operator">=</span>{<span class="token boolean">false</span>}<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Table\n        components<span class="token operator">=</span>{components}\n        bordered\n        dataSource<span class="token operator">=</span>{data}\n        columns<span class="token operator">=</span>{mergedColumns}\n        rowClassName<span class="token operator">=</span><span class="token string">"editable-row"</span>\n        pagination<span class="token operator">=</span>{{\n          onChange<span class="token punctuation">:</span> cancel<span class="token punctuation">,</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>EditableTable <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> InputNumber<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>\n  key<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  age<span class="token operator">:</span> number<span class="token punctuation">;</span>\n  address<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> originData<span class="token operator">:</span> Item<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  originData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">interface</span> <span class="token class-name">EditableCellProps</span> <span class="token punctuation">{</span>\n  editing<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n  dataIndex<span class="token operator">:</span> string<span class="token punctuation">;</span>\n  title<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>\n  inputType<span class="token operator">:</span> <span class="token string">\'number\'</span> <span class="token operator">|</span> <span class="token string">\'text\'</span><span class="token punctuation">;</span>\n  record<span class="token operator">:</span> Item<span class="token punctuation">;</span>\n  index<span class="token operator">:</span> number<span class="token punctuation">;</span>\n  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> EditableCell<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableCellProps</span></span><span class="token punctuation">></span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n  editing<span class="token punctuation">,</span>\n  dataIndex<span class="token punctuation">,</span>\n  title<span class="token punctuation">,</span>\n  inputType<span class="token punctuation">,</span>\n  record<span class="token punctuation">,</span>\n  index<span class="token punctuation">,</span>\n  children<span class="token punctuation">,</span>\n  <span class="token operator">...</span>restProps\n<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> inputNode <span class="token operator">=</span> inputType <span class="token operator">===</span> <span class="token string">\'number\'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputNumber</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">restProps</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>editing <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>\n          <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Please Input </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>inputNode<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n        children\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">EditableTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>originData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>editingKey<span class="token punctuation">,</span> setEditingKey<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">isEditing</span> <span class="token operator">=</span> <span class="token parameter">record</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>key <span class="token operator">===</span> editingKey<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">edit</span> <span class="token operator">=</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>record <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setEditingKey</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>data<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          <span class="token operator">...</span>item<span class="token punctuation">,</span>\n          <span class="token operator">...</span>row<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        newData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Validate Failed:\'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'25%\'</span><span class="token punctuation">,</span>\n      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'15%\'</span><span class="token punctuation">,</span>\n      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'40%\'</span><span class="token punctuation">,</span>\n      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> editable <span class="token operator">=</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> editable <span class="token operator">?</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              Save\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Sure to cancel?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">cancel</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>editingKey <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">edit</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            Edit\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    body<span class="token operator">:</span> <span class="token punctuation">{</span>\n      cell<span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">col</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> col<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>col<span class="token punctuation">,</span>\n      <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n        record<span class="token punctuation">,</span>\n        inputType<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">\'age\'</span> <span class="token operator">?</span> <span class="token string">\'number\'</span> <span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>\n        title<span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n        editing<span class="token operator">:</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>\n        <span class="token attr-name">bordered</span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowClassName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editable-row<span class="token punctuation">"</span></span>\n        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onChange<span class="token operator">:</span> cancel<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> InputNumber<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> originData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  originData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">EditableCell</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n  editing<span class="token punctuation">,</span>\n  dataIndex<span class="token punctuation">,</span>\n  title<span class="token punctuation">,</span>\n  inputType<span class="token punctuation">,</span>\n  record<span class="token punctuation">,</span>\n  index<span class="token punctuation">,</span>\n  children<span class="token punctuation">,</span>\n  <span class="token operator">...</span>restProps\n<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> inputNode <span class="token operator">=</span> inputType <span class="token operator">===</span> <span class="token string">\'number\'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputNumber</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">restProps</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>editing <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>\n          <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            margin<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Please Input </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>inputNode<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n        children\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">EditableTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>originData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>editingKey<span class="token punctuation">,</span> setEditingKey<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">isEditing</span> <span class="token operator">=</span> <span class="token parameter">record</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>key <span class="token operator">===</span> editingKey<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">edit</span> <span class="token operator">=</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>record <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setEditingKey</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>data<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> <span class="token operator">...</span>row <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        newData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Validate Failed:\'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'25%\'</span><span class="token punctuation">,</span>\n      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'15%\'</span><span class="token punctuation">,</span>\n      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'40%\'</span><span class="token punctuation">,</span>\n      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> editable <span class="token operator">=</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> editable <span class="token operator">?</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>\n              <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span>\n              <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n                marginRight<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">></span></span>\n              Save\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Sure to cancel?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">cancel</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>editingKey <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">edit</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            Edit\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    body<span class="token operator">:</span> <span class="token punctuation">{</span>\n      cell<span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">col</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> col<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>col<span class="token punctuation">,</span>\n      <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n        record<span class="token punctuation">,</span>\n        inputType<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">\'age\'</span> <span class="token operator">?</span> <span class="token string">\'number\'</span> <span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>\n        title<span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n        editing<span class="token operator">:</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>\n        <span class="token attr-name">bordered</span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowClassName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editable-row<span class="token punctuation">"</span></span>\n        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onChange<span class="token operator">:</span> cancel<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n=a(0),s=(a(14),a(5));function t(n){return function(n){if(Array.isArray(n)){for(var s=0,a=new Array(n.length);s<n.length;s++)a[s]=n[s];return a}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function p(n,s,a,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void a(n)}c.done?s(u):Promise.resolve(u).then(t,p)}function o(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function e(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?o(Object(a),!0).forEach((function(s){c(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function c(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function u(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var a=[],t=!0,p=!1,o=void 0;try{for(var e,c=n[Symbol.iterator]();!(t=(e=c.next()).done)&&(a.push(e.value),!s||a.length!==s);t=!0);}catch(n){p=!0,o=n}finally{try{t||null==c.return||c.return()}finally{if(p)throw o}}return a}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function l(n,s){if(null==n)return{};var a,t,p=function(n,s){if(null==n)return{};var a,t,p={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||(p[a]=n[a]);return p}(n,s);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(p[a]=n[a])}return p}for(var k=[],i=0;i<100;i++)k.push({key:i.toString(),name:"Edrward ".concat(i),age:32,address:"London Park no. ".concat(i)});var r=function(a){var t=a.editing,p=a.dataIndex,o=a.title,e=a.inputType,c=(a.record,a.index,a.children),u=l(a,["editing","dataIndex","title","inputType","record","index","children"]),k="number"===e?n.createElement(s.InputNumber,null):n.createElement(s.Input,null);return n.createElement("td",u,t?n.createElement(s.Form.Item,{name:p,style:{margin:0},rules:[{required:!0,message:"Please Input ".concat(o,"!")}]},k):c)};return n.createElement((function(){var a=u(s.Form.useForm(),1)[0],o=u(n.useState(k),2),c=o[0],l=o[1],i=u(n.useState(""),2),d=i[0],g=i[1],m=function(n){return n.key===d},h=function(){g("")},y=function(){var n,s=(n=regeneratorRuntime.mark((function n(s){var p,o,u,k;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,a.validateFields();case 3:p=n.sent,o=t(c),(u=o.findIndex((function(n){return s===n.key})))>-1?(k=o[u],o.splice(u,1,e({},k,{},p)),l(o),g("")):(o.push(p),l(o),g("")),n.next=13;break;case 9:return n.prev=9,n.t0=n.catch(0),console.log("Validate Failed:",n.t0),n.abrupt("return");case 13:case"end":return n.stop()}}),n,null,[[0,9]])})),function(){var s=this,a=arguments;return new Promise((function(t,o){var e=n.apply(s,a);function c(n){p(e,t,o,c,u,"next",n)}function u(n){p(e,t,o,c,u,"throw",n)}c(void 0)}))});return function(n){return s.apply(this,arguments)}}(),f={body:{cell:r}},b=[{title:"name",dataIndex:"name",width:"25%",editable:!0},{title:"age",dataIndex:"age",width:"15%",editable:!0},{title:"address",dataIndex:"address",width:"40%",editable:!0},{title:"operation",dataIndex:"operation",render:function(t,p){return m(p)?n.createElement("span",null,n.createElement("a",{href:"javascript:;",onClick:function(){return y(p.key)},style:{marginRight:8}},"Save"),n.createElement(s.Popconfirm,{title:"Sure to cancel?",onConfirm:function(){return h(p.key)}},n.createElement("a",null,"Cancel"))):n.createElement("a",{disabled:""!==d,onClick:function(){return function(n){a.setFieldsValue(e({},n)),g(n.key)}(p)}},"Edit")}}].map((function(n){return n.editable?e({},n,{onCell:function(s){return{record:s,inputType:"age"===n.dataIndex?"number":"text",dataIndex:n.dataIndex,title:n.title,editing:m(s)}}}):n}));return n.createElement(s.Form,{form:a,component:!1},n.createElement(s.Table,{components:f,bordered:!0,dataSource:c,columns:b,rowClassName:"editable-row",pagination:{onChange:h}}))}),null)},style:".editable-row .ant-form-explain {\n  position: absolute;\n  font-size: 12px;\n  margin-top: -4px;\n}",highlightedStyle:'<span class="token selector"><span class="token class">.editable-row</span> <span class="token class">.ant-form-explain</span> </span><span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>\n  <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">4</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},3805:function(n,s,a){n.exports={content:{"zh-CN":[["p","设置 ",["code","column.ellipsis"]," 可以让单元格内容根据宽度自动省略。"],["blockquote",["p","列头缩略暂不支持和排序筛选一起使用。"]]],"en-US":[["p","Ellipsis cell content via setting ",["code","column.ellipsis"],"."],["blockquote",["p","Cannot ellipsis table header with sorters and filters for now."]]]},meta:{order:28,title:{"en-US":"ellipsis column","zh-CN":"单元格自动省略"},filename:"components/table/demo/ellipsis.md",id:"components-table-demo-ellipsis"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address 1\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Long Column Long Column Long Column\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address 2\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Long Column Long Column\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address 3\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Long Column\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address 4\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park, New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 2 Lake Park, London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'loser\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'cool\'</span><span class="token punctuation">,</span> <span class="token string">\'teacher\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">text</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address 1\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Long Column Long Column Long Column\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address 2\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Long Column Long Column\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address 3\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Long Column\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address 4\'</span><span class="token punctuation">,</span>\n    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park, New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 2 Lake Park, London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'loser\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'cool\'</span><span class="token punctuation">,</span> <span class="token string">\'teacher\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=[{title:"Name",dataIndex:"name",key:"name",render:function(s){return n.createElement("a",null,s)},width:150},{title:"Age",dataIndex:"age",key:"age",width:80},{title:"Address",dataIndex:"address",key:"address 1",ellipsis:!0},{title:"Long Column Long Column Long Column",dataIndex:"address",key:"address 2",ellipsis:!0},{title:"Long Column Long Column",dataIndex:"address",key:"address 3",ellipsis:!0},{title:"Long Column",dataIndex:"address",key:"address 4",ellipsis:!0}];return n.createElement(s.Table,{columns:t,dataSource:[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park, New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",name:"Jim Green",age:42,address:"London No. 2 Lake Park, London No. 2 Lake Park",tags:["loser"]},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park, Sidney No. 1 Lake Park",tags:["cool","teacher"]}]})}}},3806:function(n,s,a){n.exports={content:{"zh-CN":[["p","表格支持树形数据的展示，当数据中有 ",["code","children"]," 字段时会自动展示为树形表格，如果不需要或配置为其他字段可以用 ",["code","childrenColumnName"]," 进行配置。"],["p","可以通过设置 ",["code","indentSize"]," 以控制每一层的缩进宽度。"],["blockquote",["p","注：暂不支持父子数据递归关联选择。"]]],"en-US":[["p","Display tree structure data in Table when there is field key ",["code","children"]," in dataSource, try to customize ",["code","childrenColumnName"]," property to avoid tree table structure."],["p","You can control the indent width by setting ",["code","indentSize"],"."],["blockquote",["p","Note, no support for recursive selection of tree structure data table yet."]]]},meta:{order:17,title:{"en-US":"Tree data","zh-CN":"树形数据展示"},filename:"components/table/demo/expand-children.md",id:"components-table-demo-expand-children"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'12%\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'30%\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown sr.\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        key<span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token string">\'New York No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'John Brown jr.\'</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token string">\'New York No. 3 Lake Park\'</span><span class="token punctuation">,</span>\n        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            key<span class="token punctuation">:</span> <span class="token number">121</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'Jimmy Brown\'</span><span class="token punctuation">,</span>\n            age<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n            address<span class="token punctuation">:</span> <span class="token string">\'New York No. 3 Lake Park\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token punctuation">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Jim Green sr.\'</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> <span class="token number">72</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            key<span class="token punctuation">:</span> <span class="token number">131</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n            age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n            address<span class="token punctuation">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n            children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                key<span class="token punctuation">:</span> <span class="token number">1311</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'Jim Green jr.\'</span><span class="token punctuation">,</span>\n                age<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n                address<span class="token punctuation">:</span> <span class="token string">\'London No. 3 Lake Park\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                key<span class="token punctuation">:</span> <span class="token number">1312</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'Jimmy Green sr.\'</span><span class="token punctuation">,</span>\n                age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n                address<span class="token punctuation">:</span> <span class="token string">\'London No. 4 Lake Park\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// rowSelection objects indicates the need for row selection</span>\n<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n  onChange<span class="token punctuation">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token string">\'selectedRows: \'</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  onSelect<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  onSelectAll<span class="token punctuation">:</span> <span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token string">\'12%\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token string">\'30%\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown sr.\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n        age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">\'New York No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'John Brown jr.\'</span><span class="token punctuation">,</span>\n        age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">\'New York No. 3 Lake Park\'</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            key<span class="token operator">:</span> <span class="token number">121</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">\'Jimmy Brown\'</span><span class="token punctuation">,</span>\n            age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n            address<span class="token operator">:</span> <span class="token string">\'New York No. 3 Lake Park\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'Jim Green sr.\'</span><span class="token punctuation">,</span>\n        age<span class="token operator">:</span> <span class="token number">72</span><span class="token punctuation">,</span>\n        address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            key<span class="token operator">:</span> <span class="token number">131</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n            age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n            address<span class="token operator">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token number">1311</span><span class="token punctuation">,</span>\n                name<span class="token operator">:</span> <span class="token string">\'Jim Green jr.\'</span><span class="token punctuation">,</span>\n                age<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n                address<span class="token operator">:</span> <span class="token string">\'London No. 3 Lake Park\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token number">1312</span><span class="token punctuation">,</span>\n                name<span class="token operator">:</span> <span class="token string">\'Jimmy Green sr.\'</span><span class="token punctuation">,</span>\n                age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n                address<span class="token operator">:</span> <span class="token string">\'London No. 4 Lake Park\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// rowSelection objects indicates the need for row selection</span>\n<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">\'selectedRows: \'</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onSelectAll</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t={onChange:function(n,s){console.log("selectedRowKeys: ".concat(n),"selectedRows: ",s)},onSelect:function(n,s,a){console.log(n,s,a)},onSelectAll:function(n,s,a){console.log(n,s,a)}};return n.createElement(s.Table,{columns:[{title:"Name",dataIndex:"name",key:"name"},{title:"Age",dataIndex:"age",key:"age",width:"12%"},{title:"Address",dataIndex:"address",width:"30%",key:"address"}],rowSelection:t,dataSource:[{key:1,name:"John Brown sr.",age:60,address:"New York No. 1 Lake Park",children:[{key:11,name:"John Brown",age:42,address:"New York No. 2 Lake Park"},{key:12,name:"John Brown jr.",age:30,address:"New York No. 3 Lake Park",children:[{key:121,name:"Jimmy Brown",age:16,address:"New York No. 3 Lake Park"}]},{key:13,name:"Jim Green sr.",age:72,address:"London No. 1 Lake Park",children:[{key:131,name:"Jim Green",age:42,address:"London No. 2 Lake Park",children:[{key:1311,name:"Jim Green jr.",age:25,address:"London No. 3 Lake Park"},{key:1312,name:"Jimmy Green sr.",age:18,address:"London No. 4 Lake Park"}]}]}]},{key:2,name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"}]})}}},3807:function(n,s,a){n.exports={content:{"zh-CN":[["p","当表格内容较多不能一次性完全展示时。"]],"en-US":[["p","When there's too much information to show and the table can't display all at once."]]},meta:{order:14,title:{"en-US":"Expandable Row","zh-CN":"可展开"},filename:"components/table/demo/expand.md",id:"components-table-demo-expand"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'age\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'address\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'x\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token punctuation">:</span> <span class="token string">\'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token punctuation">:</span> <span class="token string">\'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Not Expandable\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">29</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Jiangsu No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token punctuation">:</span> <span class="token string">\'This not expandable\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token punctuation">:</span> <span class="token string">\'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      expandedRowRender<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>p style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n      rowExpandable<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token string">\'Not Expandable\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    dataSource<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span>\n  <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'age\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'address\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'x\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">\'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">\'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Not Expandable\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Jiangsu No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">\'This not expandable\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">\'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Table\n    columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n    expandable<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n      <span class="token function-variable function">rowExpandable</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token string">\'Not Expandable\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    dataSource<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span>\n  <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=[{title:"Name",dataIndex:"name",key:"name"},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"},{title:"Action",dataIndex:"",key:"x",render:function(){return n.createElement("a",null,"Delete")}}];return n.createElement(s.Table,{columns:t,expandable:{expandedRowRender:function(s){return n.createElement("p",{style:{margin:0}},s.description)},rowExpandable:function(n){return"Not Expandable"!==n.name}},dataSource:[{key:1,name:"John Brown",age:32,address:"New York No. 1 Lake Park",description:"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park."},{key:2,name:"Jim Green",age:42,address:"London No. 1 Lake Park",description:"My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park."},{key:3,name:"Not Expandable",age:29,address:"Jiangsu No. 1 Lake Park",description:"This not expandable"},{key:4,name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park",description:"My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park."}]})}}},3808:function(n,s,a){n.exports={content:{"zh-CN":[["p","适合同时展示有大量数据和数据列。"],["blockquote",["p","若列头与内容不对齐或出现列重复，请指定",["strong","固定列"],"的宽度 ",["code","width"],"。如果指定 ",["code","width"]," 不生效或出现白色垂直空隙，请尝试建议留一列不设宽度以适应弹性布局，或者检查是否有",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"超长连续字段破坏布局"],"。"],["p","建议指定 ",["code","scroll.x"]," 为大于表格宽度的固定值或百分比。注意，且非固定列宽度之和不要超过 ",["code","scroll.x"],"。"]]],"en-US":[["p","A Solution for displaying large amounts of data with long columns."],["blockquote",["p","Specify the width of columns if header and cell do not align properly. If specified width is not working or have gutter between columns, please try to leave one column at least without width to fit fluid layout, or make sure no ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"long word to break table layout"],"."],["p","A fixed value which is greater than table width for ",["code","scroll.x"]," is recommended. The sum of unfixed columns should not greater than ",["code","scroll.x"],"."]]]},meta:{order:20,title:{"en-US":"Fixed Columns and Header","zh-CN":"固定头和列"},filename:"components/table/demo/fixed-columns-header.md",id:"components-table-demo-fixed-columns-header"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Full Name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Column 1\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Column 2\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Column 3\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Column 4\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Column 5\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Column 6\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'6\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Column 7\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'7\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 8\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'8\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Full Name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Column 1\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Column 2\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Column 3\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Column 4\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Column 5\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Column 6\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'6\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Column 7\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'7\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 8\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'8\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){for(var n=a(0),s=(a(14),a(5)),t=[{title:"Full Name",width:100,dataIndex:"name",key:"name",fixed:"left"},{title:"Age",width:100,dataIndex:"age",key:"age",fixed:"left"},{title:"Column 1",dataIndex:"address",key:"1",width:150},{title:"Column 2",dataIndex:"address",key:"2",width:150},{title:"Column 3",dataIndex:"address",key:"3",width:150},{title:"Column 4",dataIndex:"address",key:"4",width:150},{title:"Column 5",dataIndex:"address",key:"5",width:150},{title:"Column 6",dataIndex:"address",key:"6",width:150},{title:"Column 7",dataIndex:"address",key:"7",width:150},{title:"Column 8",dataIndex:"address",key:"8"},{title:"Action",key:"operation",fixed:"right",width:100,render:function(){return n.createElement("a",null,"action")}}],p=[],o=0;o<100;o++)p.push({key:o,name:"Edrward ".concat(o),age:32,address:"London Park no. ".concat(o)});return n.createElement(s.Table,{columns:t,dataSource:p,scroll:{x:1500,y:300}})}}},3809:function(n,s,a){n.exports={content:{"zh-CN":[["p","对于列数很多的数据，可以固定前后的列，横向滚动查看其它数据，需要和 ",["code","scroll.x"]," 配合使用。"],["blockquote",["p","若列头与内容不对齐或出现列重复，请指定",["strong","固定列"],"的宽度 ",["code","width"],"。如果指定 ",["code","width"]," 不生效或出现白色垂直空隙，请尝试建议留一列不设宽度以适应弹性布局，或者检查是否有",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"超长连续字段破坏布局"],"。"],["p","建议指定 ",["code","scroll.x"]," 为大于表格宽度的固定值或百分比。注意，且非固定列宽度之和不要超过 ",["code","scroll.x"],"。"]],["p",["strong","注意：v4 版本固定列通过 sticky 实现，IE 11 会降级成横向滚动。"]]],"en-US":[["p","To fix some columns and scroll inside other columns, and you must set ",["code","scroll.x"]," meanwhile."],["blockquote",["p","Specify the width of columns if header and cell do not align properly. If specified width is not working or have gutter between columns, please try to leave one column at least without width to fit fluid layout, or make sure no ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"long word to break table layout"],"."],["p","A fixed value which is greater than table width for ",["code","scroll.x"]," is recommended. The sum of unfixed columns should not greater than ",["code","scroll.x"],"."]],["p",["strong","Note: v4 using sticky to implement fixed effect. IE 11 will downgrade to horizontal scroll."]]]},meta:{order:19,title:{"en-US":"Fixed Columns","zh-CN":"固定列"},filename:"components/table/demo/fixed-columns.md",id:"components-table-demo-fixed-columns"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Full Name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 1\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'1\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 2\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'2\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 3\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'3\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 4\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'4\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 5\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'5\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 6\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'6\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 7\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'7\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Column 8\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'8\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Full Name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 1\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'1\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 2\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'2\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 3\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'3\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 4\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'4\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 5\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'5\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 6\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'6\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 7\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'7\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Column 8\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'8\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=[{title:"Full Name",width:100,dataIndex:"name",key:"name",fixed:"left"},{title:"Age",width:100,dataIndex:"age",key:"age",fixed:"left"},{title:"Column 1",dataIndex:"address",key:"1"},{title:"Column 2",dataIndex:"address",key:"2"},{title:"Column 3",dataIndex:"address",key:"3"},{title:"Column 4",dataIndex:"address",key:"4"},{title:"Column 5",dataIndex:"address",key:"5"},{title:"Column 6",dataIndex:"address",key:"6"},{title:"Column 7",dataIndex:"address",key:"7"},{title:"Column 8",dataIndex:"address",key:"8"},{title:"Action",key:"operation",fixed:"right",width:100,render:function(){return n.createElement("a",null,"action")}}];return n.createElement(s.Table,{columns:t,dataSource:[{key:"1",name:"John Brown",age:32,address:"New York Park"},{key:"2",name:"Jim Green",age:40,address:"London Park"}],scroll:{x:1300}})}}},3810:function(n,s,a){n.exports={content:{"zh-CN":[["p","方便一页内展示大量数据。"],["p","需要指定 column 的 ",["code","width"]," 属性，否则列头和内容可能不对齐。如果指定 ",["code","width"]," 不生效或出现白色垂直空隙，请尝试建议留一列不设宽度以适应弹性布局，或者检查是否有",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"超长连续字段破坏布局"],"。"]],"en-US":[["p","Display large amounts of data in scrollable view."],["blockquote",["p","Specify width of columns if header and cell do not align properly. If specified width is not working or have gutter between columns, please try to leave one column at least without width to fit fluid layout, or make sure no ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"long word to break table layout"],"."]]]},meta:{order:18,title:{"en-US":"Fixed Header","zh-CN":"固定表头"},filename:"components/table/demo/fixed-header.md",id:"components-table-demo-fixed-header"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> pageSize<span class="token punctuation">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> y<span class="token punctuation">:</span> <span class="token number">240</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> pageSize<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token number">240</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){for(var n=a(0),s=(a(14),a(5)),t=[],p=0;p<100;p++)t.push({key:p,name:"Edward King ".concat(p),age:32,address:"London, Park Lane no. ".concat(p)});return n.createElement(s.Table,{columns:[{title:"Name",dataIndex:"name",width:150},{title:"Age",dataIndex:"age",width:150},{title:"Address",dataIndex:"address"}],dataSource:t,pagination:{pageSize:50},scroll:{y:240}})}}},3811:function(n,s,a){n.exports={content:{"zh-CN":[["p",["code","columns[n]"]," 可以内嵌 ",["code","children"],"，以渲染分组表头。"]],"en-US":[["p","Group table head with ",["code","columns[n].children"],"."]]},meta:{order:22,title:{"en-US":"Grouping table head","zh-CN":"表头分组"},filename:"components/table/demo/grouping-columns.md",id:"components-table-demo-grouping-columns"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">\'John\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'John\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Other\'</span><span class="token punctuation">,</span>\n    children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n        sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'Street\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">\'street\'</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">\'street\'</span><span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'Block\'</span><span class="token punctuation">,</span>\n            children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'Building\'</span><span class="token punctuation">,</span>\n                dataIndex<span class="token punctuation">:</span> <span class="token string">\'building\'</span><span class="token punctuation">,</span>\n                key<span class="token punctuation">:</span> <span class="token string">\'building\'</span><span class="token punctuation">,</span>\n                width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'Door No.\'</span><span class="token punctuation">,</span>\n                dataIndex<span class="token punctuation">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                key<span class="token punctuation">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Company\'</span><span class="token punctuation">,</span>\n    children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Company Address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'companyAddress\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'companyAddress\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Company Name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'companyName\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'companyName\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Gender\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'gender\'</span><span class="token punctuation">,</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'gender\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    street<span class="token punctuation">:</span> <span class="token string">\'Lake Park\'</span><span class="token punctuation">,</span>\n    building<span class="token punctuation">:</span> <span class="token string">\'C\'</span><span class="token punctuation">,</span>\n    number<span class="token punctuation">:</span> <span class="token number">2035</span><span class="token punctuation">,</span>\n    companyAddress<span class="token punctuation">:</span> <span class="token string">\'Lake Street 42\'</span><span class="token punctuation">,</span>\n    companyName<span class="token punctuation">:</span> <span class="token string">\'SoftLake Co\'</span><span class="token punctuation">,</span>\n    gender<span class="token punctuation">:</span> <span class="token string">\'M\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token attr-name">bordered</span>\n    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>\n    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token string">\'calc(700px + 50%)\'</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">240</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n    filters<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n        value<span class="token operator">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">\'John\'</span><span class="token punctuation">,</span>\n        value<span class="token operator">:</span> <span class="token string">\'John\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Other\'</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Street\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">\'street\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'street\'</span><span class="token punctuation">,</span>\n            width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Block\'</span><span class="token punctuation">,</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">\'Building\'</span><span class="token punctuation">,</span>\n                dataIndex<span class="token operator">:</span> <span class="token string">\'building\'</span><span class="token punctuation">,</span>\n                key<span class="token operator">:</span> <span class="token string">\'building\'</span><span class="token punctuation">,</span>\n                width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">\'Door No.\'</span><span class="token punctuation">,</span>\n                dataIndex<span class="token operator">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                key<span class="token operator">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Company\'</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Company Address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'companyAddress\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'companyAddress\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Company Name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'companyName\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'companyName\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Gender\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'gender\'</span><span class="token punctuation">,</span>\n    key<span class="token operator">:</span> <span class="token string">\'gender\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    street<span class="token operator">:</span> <span class="token string">\'Lake Park\'</span><span class="token punctuation">,</span>\n    building<span class="token operator">:</span> <span class="token string">\'C\'</span><span class="token punctuation">,</span>\n    number<span class="token operator">:</span> <span class="token number">2035</span><span class="token punctuation">,</span>\n    companyAddress<span class="token operator">:</span> <span class="token string">\'Lake Street 42\'</span><span class="token punctuation">,</span>\n    companyName<span class="token operator">:</span> <span class="token string">\'SoftLake Co\'</span><span class="token punctuation">,</span>\n    gender<span class="token operator">:</span> <span class="token string">\'M\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token attr-name">bordered</span>\n    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>\n    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token string">\'calc(700px + 50%)\'</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">240</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){for(var n=a(0),s=(a(14),a(5)),t=[],p=0;p<100;p++)t.push({key:p,name:"John Brown",age:p+1,street:"Lake Park",building:"C",number:2035,companyAddress:"Lake Street 42",companyName:"SoftLake Co",gender:"M"});return n.createElement(s.Table,{columns:[{title:"Name",dataIndex:"name",key:"name",width:100,fixed:"left",filters:[{text:"Joe",value:"Joe"},{text:"John",value:"John"}],onFilter:function(n,s){return 0===s.name.indexOf(n)}},{title:"Other",children:[{title:"Age",dataIndex:"age",key:"age",width:150,sorter:function(n,s){return n.age-s.age}},{title:"Address",children:[{title:"Street",dataIndex:"street",key:"street",width:150},{title:"Block",children:[{title:"Building",dataIndex:"building",key:"building",width:100},{title:"Door No.",dataIndex:"number",key:"number",width:100}]}]}]},{title:"Company",children:[{title:"Company Address",dataIndex:"companyAddress",key:"companyAddress",width:200},{title:"Company Name",dataIndex:"companyName",key:"companyName"}]},{title:"Gender",dataIndex:"gender",key:"gender",width:80,fixed:"right"}],dataSource:t,bordered:!0,size:"middle",scroll:{x:"calc(700px + 50%)",y:240}})}}},3812:function(n,s,a){n.exports={content:{"zh-CN":[["p","对某一列数据进行筛选，使用列的 ",["code","filters"]," 属性来指定需要筛选菜单的列，",["code","onFilter"]," 用于筛选当前数据，",["code","filterMultiple"]," 用于指定多选和单选。"],["p","对某一列数据进行排序，通过指定列的 ",["code","sorter"]," 函数即可启动排序按钮。",["code","sorter: function(rowA, rowB) { ... }"],"， rowA、rowB 为比较的两个行数据。"],["p",["code","sortDirections: ['ascend' | 'descend']"],"改变每列可用的排序方式，切换排序时按数组内容依次切换，设置在 table props 上时对所有列生效。"],["p","使用 ",["code","defaultSortOrder"]," 属性，设置列的默认排序顺序。"]],"en-US":[["p","Use ",["code","filters"]," to generate filter menu in columns, ",["code","onFilter"]," to determine filtered result, and ",["code","filterMultiple"]," to indicate whether it's multiple or single selection."],["p","Uses ",["code","defaultFilteredValue"]," to make a column filtered by default."],["p","Use ",["code","sorter"]," to make a column sortable. ",["code","sorter"]," can be a function of the type ",["code","function(a, b) { ... }"]," for sorting data locally."],["p",["code","sortDirections: ['ascend' | 'descend']"]," defines available sort methods for each columns, effective for all columns when set on table props."],["p","Uses ",["code","defaultSortOrder"]," to make a column sorted by default."],["p","If a ",["code","sortOrder"]," or ",["code","defaultSortOrder"]," is specified with the value ",["code","ascend"]," or ",["code","descend"],", you can access this value from within the function passed to the ",["code","sorter"]," as explained above. Such a function can take the form: ",["code","function(a, b, sortOrder) { ... }"],"."]]},meta:{order:6,title:{"en-US":"Filter and sorter","zh-CN":"筛选和排序"},filename:"components/table/demo/head.md",id:"components-table-demo-head"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">\'Submenu\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'Submenu\'</span><span class="token punctuation">,</span>\n        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'Green\'</span><span class="token punctuation">,</span>\n            value<span class="token punctuation">:</span> <span class="token string">\'Green\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'Black\'</span><span class="token punctuation">,</span>\n            value<span class="token punctuation">:</span> <span class="token string">\'Black\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment" spellcheck="true">// specify the condition of filtering result</span>\n    <span class="token comment" spellcheck="true">// here is that finding the name started with `value`</span>\n    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n    sortDirections<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'descend\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    defaultSortOrder<span class="token punctuation">:</span> <span class="token string">\'descend\'</span><span class="token punctuation">,</span>\n    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">\'London\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'London\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">\'New York\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'New York\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    filterMultiple<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n    sortDirections<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'descend\'</span><span class="token punctuation">,</span> <span class="token string">\'ascend\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">onChange</span><span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'params\'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    filters<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n        value<span class="token operator">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span>\n        value<span class="token operator">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">\'Submenu\'</span><span class="token punctuation">,</span>\n        value<span class="token operator">:</span> <span class="token string">\'Submenu\'</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            text<span class="token operator">:</span> <span class="token string">\'Green\'</span><span class="token punctuation">,</span>\n            value<span class="token operator">:</span> <span class="token string">\'Green\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            text<span class="token operator">:</span> <span class="token string">\'Black\'</span><span class="token punctuation">,</span>\n            value<span class="token operator">:</span> <span class="token string">\'Black\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// specify the condition of filtering result</span>\n    <span class="token comment">// here is that finding the name started with `value`</span>\n    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n    sortDirections<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'descend\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    defaultSortOrder<span class="token operator">:</span> <span class="token string">\'descend\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n    filters<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">\'London\'</span><span class="token punctuation">,</span>\n        value<span class="token operator">:</span> <span class="token string">\'London\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        text<span class="token operator">:</span> <span class="token string">\'New York\'</span><span class="token punctuation">,</span>\n        value<span class="token operator">:</span> <span class="token string">\'New York\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    filterMultiple<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n    sortDirections<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'descend\'</span><span class="token punctuation">,</span> <span class="token string">\'ascend\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'params\'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5));return n.createElement(s.Table,{columns:[{title:"Name",dataIndex:"name",filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"},{text:"Submenu",value:"Submenu",children:[{text:"Green",value:"Green"},{text:"Black",value:"Black"}]}],onFilter:function(n,s){return 0===s.name.indexOf(n)},sorter:function(n,s){return n.name.length-s.name.length},sortDirections:["descend"]},{title:"Age",dataIndex:"age",defaultSortOrder:"descend",sorter:function(n,s){return n.age-s.age}},{title:"Address",dataIndex:"address",filters:[{text:"London",value:"London"},{text:"New York",value:"New York"}],filterMultiple:!1,onFilter:function(n,s){return 0===s.address.indexOf(n)},sorter:function(n,s){return n.address.length-s.address.length},sortDirections:["descend","ascend"]}],dataSource:[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],onChange:function(n,s,a,t){console.log("params",n,s,a,t)}})}}},3813:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 JSX 风格的 API（2.5.0 以后引入）"],["blockquote",["p","这个只是一个描述 ",["code","columns"]," 的语法糖，所以你不能用其他组件去包裹 ",["code","Column"]," 和 ",["code","ColumnGroup"],"。"]]],"en-US":[["p","Using JSX style API (introduced in 2.5.0)"],["blockquote",["p","Since this is just a syntax sugar for the prop ",["code","columns"],", you can't compose ",["code","Column"]," and ",["code","ColumnGroup"]," with other Components."]]]},meta:{order:1,title:{"en-US":"JSX style API","zh-CN":"JSX 风格的 API"},filename:"components/table/demo/jsx.md",id:"components-table-demo-jsx"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Column<span class="token punctuation">,</span> ColumnGroup <span class="token punctuation">}</span> <span class="token operator">=</span> Table<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    firstName<span class="token punctuation">:</span> <span class="token string">\'John\'</span><span class="token punctuation">,</span>\n    lastName<span class="token punctuation">:</span> <span class="token string">\'Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    firstName<span class="token punctuation">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span>\n    lastName<span class="token punctuation">:</span> <span class="token string">\'Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'loser\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    firstName<span class="token punctuation">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n    lastName<span class="token punctuation">:</span> <span class="token string">\'Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'cool\'</span><span class="token punctuation">,</span> <span class="token string">\'teacher\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnGroup</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>First</span> <span class="token attr-name">Name"</span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Last</span> <span class="token attr-name">Name"</span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ColumnGroup</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Age<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Address<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span>\n      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tags<span class="token punctuation">"</span></span>\n      <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>\n      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>\n      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>tags <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>Tag color<span class="token operator">=</span><span class="token string">"blue"</span> key<span class="token punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>tag<span class="token punctuation">}</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Tag</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span>\n      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Action<span class="token punctuation">"</span></span>\n      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>action<span class="token punctuation">"</span></span>\n      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>a style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token punctuation">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Table</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Column<span class="token punctuation">,</span> ColumnGroup <span class="token punctuation">}</span> <span class="token operator">=</span> Table<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    firstName<span class="token operator">:</span> <span class="token string">\'John\'</span><span class="token punctuation">,</span>\n    lastName<span class="token operator">:</span> <span class="token string">\'Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    firstName<span class="token operator">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span>\n    lastName<span class="token operator">:</span> <span class="token string">\'Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'loser\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    firstName<span class="token operator">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span>\n    lastName<span class="token operator">:</span> <span class="token string">\'Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'cool\'</span><span class="token punctuation">,</span> <span class="token string">\'teacher\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ColumnGroup</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>First Name<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Last Name<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ColumnGroup</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Age<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Address<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span>\n      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tags<span class="token punctuation">"</span></span>\n      <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>\n      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>\n      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">tags</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">tag</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>tag<span class="token punctuation">}</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span>\n      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Action<span class="token punctuation">"</span></span>\n      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>action<span class="token punctuation">"</span></span>\n      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=s.Table.Column,p=s.Table.ColumnGroup;return n.createElement(s.Table,{dataSource:[{key:"1",firstName:"John",lastName:"Brown",age:32,address:"New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",firstName:"Jim",lastName:"Green",age:42,address:"London No. 1 Lake Park",tags:["loser"]},{key:"3",firstName:"Joe",lastName:"Black",age:32,address:"Sidney No. 1 Lake Park",tags:["cool","teacher"]}]},n.createElement(p,{title:"Name"},n.createElement(t,{title:"First Name",dataIndex:"firstName",key:"firstName"}),n.createElement(t,{title:"Last Name",dataIndex:"lastName",key:"lastName"})),n.createElement(t,{title:"Age",dataIndex:"age",key:"age"}),n.createElement(t,{title:"Address",dataIndex:"address",key:"address"}),n.createElement(t,{title:"Tags",dataIndex:"tags",key:"tags",render:function(a){return n.createElement("span",null,a.map((function(a){return n.createElement(s.Tag,{color:"blue",key:a},a)})))}}),n.createElement(t,{title:"Action",key:"action",render:function(s,a){return n.createElement("span",null,n.createElement("a",{style:{marginRight:16}},"Invite ",a.lastName),n.createElement("a",null,"Delete"))}}))}}},3814:function(n,s,a){n.exports={content:{"zh-CN":[["p",["code","column.sorter"]," 支持 ",["code","multiple"]," 字段以配置多列排序优先级。通过 ",["code","sorter.compare"]," 配置排序逻辑，你可以通过不设置该函数只启动多列排序的交互形式。"]],"en-US":[["p",["code","column.sorter"]," support ",["code","multiple"]," to config the priority of sort columns. Though ",["code","sorter.compare"]," to customize compare function. You can also leave it empty to use the interactive only."]]},meta:{order:7,title:{"en-US":"Multiple sorter","zh-CN":"多列排序"},filename:"components/table/demo/multiple-sorter.md",id:"components-table-demo-multiple-sorter"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Chinese Score\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'chinese\'</span><span class="token punctuation">,</span>\n    sorter<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      compare<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>chinese <span class="token operator">-</span> b<span class="token punctuation">.</span>chinese<span class="token punctuation">,</span>\n      multiple<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Math Score\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'math\'</span><span class="token punctuation">,</span>\n    sorter<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      compare<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>math <span class="token operator">-</span> b<span class="token punctuation">.</span>math<span class="token punctuation">,</span>\n      multiple<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'English Score\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'english\'</span><span class="token punctuation">,</span>\n    sorter<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      compare<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>english <span class="token operator">-</span> b<span class="token punctuation">.</span>english<span class="token punctuation">,</span>\n      multiple<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    chinese<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n    math<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span>\n    english<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    chinese<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n    math<span class="token punctuation">:</span> <span class="token number">66</span><span class="token punctuation">,</span>\n    english<span class="token punctuation">:</span> <span class="token number">89</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    chinese<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n    math<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span>\n    english<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    chinese<span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">,</span>\n    math<span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span>\n    english<span class="token punctuation">:</span> <span class="token number">89</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">onChange</span><span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'params\'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Chinese Score\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'chinese\'</span><span class="token punctuation">,</span>\n    sorter<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>chinese <span class="token operator">-</span> b<span class="token punctuation">.</span>chinese<span class="token punctuation">,</span>\n      multiple<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Math Score\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'math\'</span><span class="token punctuation">,</span>\n    sorter<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>math <span class="token operator">-</span> b<span class="token punctuation">.</span>math<span class="token punctuation">,</span>\n      multiple<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'English Score\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'english\'</span><span class="token punctuation">,</span>\n    sorter<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>english <span class="token operator">-</span> b<span class="token punctuation">.</span>english<span class="token punctuation">,</span>\n      multiple<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    chinese<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n    math<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>\n    english<span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    chinese<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n    math<span class="token operator">:</span> <span class="token number">66</span><span class="token punctuation">,</span>\n    english<span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    chinese<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n    math<span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>\n    english<span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    chinese<span class="token operator">:</span> <span class="token number">88</span><span class="token punctuation">,</span>\n    math<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>\n    english<span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'params\'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5));return n.createElement(s.Table,{columns:[{title:"Name",dataIndex:"name"},{title:"Chinese Score",dataIndex:"chinese",sorter:{compare:function(n,s){return n.chinese-s.chinese},multiple:3}},{title:"Math Score",dataIndex:"math",sorter:{compare:function(n,s){return n.math-s.math},multiple:2}},{title:"English Score",dataIndex:"english",sorter:{compare:function(n,s){return n.english-s.english},multiple:1}}],dataSource:[{key:"1",name:"John Brown",chinese:98,math:60,english:70},{key:"2",name:"Jim Green",chinese:98,math:66,english:89},{key:"3",name:"Joe Black",chinese:98,math:90,english:70},{key:"4",name:"Jim Red",chinese:88,math:99,english:89}],onChange:function(n,s,a,t){console.log("params",n,s,a,t)}})}}},3815:function(n,s,a){n.exports={content:{"zh-CN":[["p","展示每行数据更详细的信息。"]],"en-US":[["p","Showing more detailed info of every row."]]},meta:{order:25,title:{"en-US":"Nested tables","zh-CN":"嵌套子表格"},filename:"components/table/demo/nested-table.md",id:"components-table-demo-nested-table"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Badge<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Dropdown <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Menu</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Menu.Item</span><span class="token punctuation">></span></span>Action <span class="token number">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Menu.Item</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Menu.Item</span><span class="token punctuation">></span></span>Action <span class="token number">2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Menu.Item</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Menu</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">NestedTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> expandedRowRender <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Date\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'date\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'state\'</span><span class="token punctuation">,</span>\n        render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n            Finished\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Upgrade Status\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'upgradeNum\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'upgradeNum\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table-operation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">overlay</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>menu<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>\n                More <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DownOutlined</span> <span class="token punctuation">/></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n        date<span class="token punctuation">:</span> <span class="token string">\'2014-12-24 23:12:00\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'This is production name\'</span><span class="token punctuation">,</span>\n        upgradeNum<span class="token punctuation">:</span> <span class="token string">\'Upgraded: 56\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Platform\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'platform\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'platform\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Version\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'version\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'version\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Upgraded\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'upgradeNum\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'upgradeNum\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Creator\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'creator\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'creator\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Date\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'createdAt\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'createdAt\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span> render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Publish<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'Screem\'</span><span class="token punctuation">,</span>\n      platform<span class="token punctuation">:</span> <span class="token string">\'iOS\'</span><span class="token punctuation">,</span>\n      version<span class="token punctuation">:</span> <span class="token string">\'10.3.4.5654\'</span><span class="token punctuation">,</span>\n      upgradeNum<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>\n      creator<span class="token punctuation">:</span> <span class="token string">\'Jack\'</span><span class="token punctuation">,</span>\n      createdAt<span class="token punctuation">:</span> <span class="token string">\'2014-12-24 23:12:00\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>components-table-demo-nested<span class="token punctuation">"</span></span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> expandedRowRender <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NestedTable</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Badge<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Dropdown <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ant-design/icons\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">></span></span>Action <span class="token number">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">></span></span>Action <span class="token number">2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu.Item</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Menu</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">NestedTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">expandedRowRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Date\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'date\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Status\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'state\'</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n            Finished\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Upgrade Status\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'upgradeNum\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'upgradeNum\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table-operation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dropdown</span></span> <span class="token attr-name">overlay</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>menu<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>\n                More <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dropdown</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n        date<span class="token operator">:</span> <span class="token string">\'2014-12-24 23:12:00\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'This is production name\'</span><span class="token punctuation">,</span>\n        upgradeNum<span class="token operator">:</span> <span class="token string">\'Upgraded: 56\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Platform\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'platform\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'platform\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Version\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'version\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'version\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Upgraded\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'upgradeNum\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'upgradeNum\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Creator\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'creator\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'creator\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Date\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'createdAt\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'createdAt\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span> <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Publish<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'Screem\'</span><span class="token punctuation">,</span>\n      platform<span class="token operator">:</span> <span class="token string">\'iOS\'</span><span class="token punctuation">,</span>\n      version<span class="token operator">:</span> <span class="token string">\'10.3.4.5654\'</span><span class="token punctuation">,</span>\n      upgradeNum<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>\n      creator<span class="token operator">:</span> <span class="token string">\'Jack\'</span><span class="token punctuation">,</span>\n      createdAt<span class="token operator">:</span> <span class="token string">\'2014-12-24 23:12:00\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>components-table-demo-nested<span class="token punctuation">"</span></span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> expandedRowRender <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NestedTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=a(17),p=n.createElement(s.Menu,null,n.createElement(s.Menu.Item,null,"Action 1"),n.createElement(s.Menu.Item,null,"Action 2"));return n.createElement((function(){for(var a=[{title:"Name",dataIndex:"name",key:"name"},{title:"Platform",dataIndex:"platform",key:"platform"},{title:"Version",dataIndex:"version",key:"version"},{title:"Upgraded",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Creator",dataIndex:"creator",key:"creator"},{title:"Date",dataIndex:"createdAt",key:"createdAt"},{title:"Action",key:"operation",render:function(){return n.createElement("a",null,"Publish")}}],o=[],e=0;e<3;++e)o.push({key:e,name:"Screem",platform:"iOS",version:"10.3.4.5654",upgradeNum:500,creator:"Jack",createdAt:"2014-12-24 23:12:00"});return n.createElement(s.Table,{className:"components-table-demo-nested",columns:a,expandable:{expandedRowRender:function(){for(var a=[{title:"Date",dataIndex:"date",key:"date"},{title:"Name",dataIndex:"name",key:"name"},{title:"Status",key:"state",render:function(){return n.createElement("span",null,n.createElement(s.Badge,{status:"success"}),"Finished")}},{title:"Upgrade Status",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Action",dataIndex:"operation",key:"operation",render:function(){return n.createElement("span",{className:"table-operation"},n.createElement("a",null,"Pause"),n.createElement("a",null,"Stop"),n.createElement(s.Dropdown,{overlay:p},n.createElement("a",null,"More ",n.createElement(t.DownOutlined,null))))}}],o=[],e=0;e<3;++e)o.push({key:e,date:"2014-12-24 23:12:00",name:"This is production name",upgradeNum:"Upgraded: 56"});return n.createElement(s.Table,{columns:a,dataSource:o,pagination:!1})}},dataSource:o})}),null)}}},3816:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用受控属性对筛选和排序状态进行控制。"],["blockquote",["ol",["li",["p","columns 中定义了 filteredValue 和 sortOrder 属性即视为受控模式。"]],["li",["p","只支持同时对一列进行排序，请保证只有一列的 sortOrder 属性是生效的。"]],["li",["p","务必指定 ",["code","column.key"],"。"]]]]],"en-US":[["p","Control filters and sorters by ",["code","filteredValue"]," and ",["code","sortOrder"],"."],["blockquote",["ol",["li",["p","Defining ",["code","filteredValue"]," or ",["code","sortOrder"]," means that it is in the controlled mode."]],["li",["p","Make sure ",["code","sortOrder"]," is assigned for only one column."]],["li",["p",["code","column.key"]," is required."]]]]]},meta:{order:8,title:{"en-US":"Reset filters and sorters","zh-CN":"可控的筛选和排序"},filename:"components/table/demo/reset-filter.md",id:"components-table-demo-reset-filter"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    filteredInfo<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n    sortedInfo<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Various parameters\'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filteredInfo<span class="token punctuation">:</span> filters<span class="token punctuation">,</span>\n      sortedInfo<span class="token punctuation">:</span> sorter<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  clearFilters <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filteredInfo<span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  clearAll <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filteredInfo<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      sortedInfo<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  setAgeSort <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      sortedInfo<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        order<span class="token punctuation">:</span> <span class="token string">\'descend\'</span><span class="token punctuation">,</span>\n        columnKey<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> sortedInfo<span class="token punctuation">,</span> filteredInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    sortedInfo <span class="token operator">=</span> sortedInfo <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    filteredInfo <span class="token operator">=</span> filteredInfo <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">\'Joe\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">\'Jim\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        filteredValue<span class="token punctuation">:</span> filteredInfo<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n        onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n        sortOrder<span class="token punctuation">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">\'name\'</span> <span class="token operator">&amp;&amp;</span> sortedInfo<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n        ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>\n        sortOrder<span class="token punctuation">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">\'age\'</span> <span class="token operator">&amp;&amp;</span> sortedInfo<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n        ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'London\'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">\'London\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> text<span class="token punctuation">:</span> <span class="token string">\'New York\'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">\'New York\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        filteredValue<span class="token punctuation">:</span> filteredInfo<span class="token punctuation">.</span>address <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n        onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n        sortOrder<span class="token punctuation">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">\'address\'</span> <span class="token operator">&amp;&amp;</span> sortedInfo<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n        ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table-operations<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>setAgeSort<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Sort age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>clearFilters<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>clearAll<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters and sorters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 2 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    filteredInfo<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n    sortedInfo<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Various parameters\'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filteredInfo<span class="token operator">:</span> filters<span class="token punctuation">,</span>\n      sortedInfo<span class="token operator">:</span> sorter<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">clearFilters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filteredInfo<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">clearAll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filteredInfo<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      sortedInfo<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setAgeSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      sortedInfo<span class="token operator">:</span> <span class="token punctuation">{</span>\n        order<span class="token operator">:</span> <span class="token string">\'descend\'</span><span class="token punctuation">,</span>\n        columnKey<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> sortedInfo<span class="token punctuation">,</span> filteredInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    sortedInfo <span class="token operator">=</span> sortedInfo <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    filteredInfo <span class="token operator">=</span> filteredInfo <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        filters<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">\'Joe\'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">\'Joe\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">\'Jim\'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">\'Jim\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        filteredValue<span class="token operator">:</span> filteredInfo<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n        sortOrder<span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">\'name\'</span> <span class="token operator">&amp;&amp;</span> sortedInfo<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n        ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>\n        sortOrder<span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">\'age\'</span> <span class="token operator">&amp;&amp;</span> sortedInfo<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n        ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n        filters<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">\'London\'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">\'London\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">\'New York\'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">\'New York\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        filteredValue<span class="token operator">:</span> filteredInfo<span class="token punctuation">.</span>address <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n        sortOrder<span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">\'address\'</span> <span class="token operator">&amp;&amp;</span> sortedInfo<span class="token punctuation">.</span>order<span class="token punctuation">,</span>\n        ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table-operations<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>setAgeSort<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Sort age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>clearFilters<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>clearAll<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters and sorters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function o(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?u(n):s}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function k(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}var i=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],r=function(a){function t(){var n,s;p(this,t);for(var a=arguments.length,o=new Array(a),l=0;l<a;l++)o[l]=arguments[l];return k(u(s=e(this,(n=c(t)).call.apply(n,[this].concat(o)))),"state",{filteredInfo:null,sortedInfo:null}),k(u(s),"handleChange",(function(n,a,t){console.log("Various parameters",n,a,t),s.setState({filteredInfo:a,sortedInfo:t})})),k(u(s),"clearFilters",(function(){s.setState({filteredInfo:null})})),k(u(s),"clearAll",(function(){s.setState({filteredInfo:null,sortedInfo:null})})),k(u(s),"setAgeSort",(function(){s.setState({sortedInfo:{order:"descend",columnKey:"age"}})})),s}var r,d,g;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(t,a),r=t,(d=[{key:"render",value:function(){var a=this.state,t=a.sortedInfo,p=a.filteredInfo;t=t||{};var o=[{title:"Name",dataIndex:"name",key:"name",filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"}],filteredValue:(p=p||{}).name||null,onFilter:function(n,s){return s.name.includes(n)},sorter:function(n,s){return n.name.length-s.name.length},sortOrder:"name"===t.columnKey&&t.order,ellipsis:!0},{title:"Age",dataIndex:"age",key:"age",sorter:function(n,s){return n.age-s.age},sortOrder:"age"===t.columnKey&&t.order,ellipsis:!0},{title:"Address",dataIndex:"address",key:"address",filters:[{text:"London",value:"London"},{text:"New York",value:"New York"}],filteredValue:p.address||null,onFilter:function(n,s){return s.address.includes(n)},sorter:function(n,s){return n.address.length-s.address.length},sortOrder:"address"===t.columnKey&&t.order,ellipsis:!0}];return n.createElement("div",null,n.createElement("div",{className:"table-operations"},n.createElement(s.Button,{onClick:this.setAgeSort},"Sort age"),n.createElement(s.Button,{onClick:this.clearFilters},"Clear filters"),n.createElement(s.Button,{onClick:this.clearAll},"Clear filters and sorters")),n.createElement(s.Table,{columns:o,dataSource:i,onChange:this.handleChange}))}}])&&o(r.prototype,d),g&&o(r,g),t}(n.Component);return n.createElement(r,null)},style:".table-operations {\n  margin-bottom: 16px;\n}\n\n.table-operations > button {\n  margin-right: 8px;\n}",highlightedStyle:'<span class="token selector"><span class="token class">.table-operations</span> </span><span class="token punctuation">{</span>\n  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.table-operations</span> > button </span><span class="token punctuation">{</span>\n  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},3817:function(n,s,a){n.exports={content:{"zh-CN":[["p","集成 ",["a",{title:null,href:"https://github.com/STRML/react-resizable"},"react-resizable"]," 来实现可伸缩列。"]],"en-US":[["p","Implement resizable column by integrate with ",["a",{title:null,href:"https://github.com/STRML/react-resizable"},"react-resizable"],"."]]},meta:{order:27,title:{"en-US":"Resizable column","zh-CN":"可伸缩列"},filename:"components/table/demo/resizable-column.md",id:"components-table-demo-resizable-column"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Resizable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-resizable\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> ResizeableTitle <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> onResize<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>th <span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Resizable</span>\n      <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span>\n      <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onResize<span class="token punctuation">}</span></span>\n      <span class="token attr-name">draggableOpts</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> enableUserSelectHack<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token operator">&lt;</span>th <span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Resizable</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Date\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Amount\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'amount\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Type\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'type\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Note\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token punctuation">:</span> <span class="token string">\'note\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n        key<span class="token punctuation">:</span> <span class="token string">\'action\'</span><span class="token punctuation">,</span>\n        render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    header<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      cell<span class="token punctuation">:</span> ResizeableTitle<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  data <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      key<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      date<span class="token punctuation">:</span> <span class="token string">\'2018-02-11\'</span><span class="token punctuation">,</span>\n      amount<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'income\'</span><span class="token punctuation">,</span>\n      note<span class="token punctuation">:</span> <span class="token string">\'transfer\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      date<span class="token punctuation">:</span> <span class="token string">\'2018-03-11\'</span><span class="token punctuation">,</span>\n      amount<span class="token punctuation">:</span> <span class="token number">243</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'income\'</span><span class="token punctuation">,</span>\n      note<span class="token punctuation">:</span> <span class="token string">\'transfer\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n      date<span class="token punctuation">:</span> <span class="token string">\'2018-04-11\'</span><span class="token punctuation">,</span>\n      amount<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'income\'</span><span class="token punctuation">,</span>\n      note<span class="token punctuation">:</span> <span class="token string">\'transfer\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  handleResize <span class="token operator">=</span> index <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> columns <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> nextColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>columns<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      nextColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>nextColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> size<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> columns<span class="token punctuation">:</span> nextColumns <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>col<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>col<span class="token punctuation">,</span>\n      onHeaderCell<span class="token punctuation">:</span> column <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n        width<span class="token punctuation">:</span> column<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n        onResize<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleResize</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">bordered</span> <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>components<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Resizable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-resizable\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">ResizeableTitle</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> onResize<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">restProps</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Resizable</span></span>\n      <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span>\n      <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onResize<span class="token punctuation">}</span></span>\n      <span class="token attr-name">draggableOpts</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> enableUserSelectHack<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">restProps</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Resizable</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    columns<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Date\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Amount\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'amount\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Type\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'type\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Note\'</span><span class="token punctuation">,</span>\n        dataIndex<span class="token operator">:</span> <span class="token string">\'note\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Action\'</span><span class="token punctuation">,</span>\n        key<span class="token operator">:</span> <span class="token string">\'action\'</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    header<span class="token operator">:</span> <span class="token punctuation">{</span>\n      cell<span class="token operator">:</span> ResizeableTitle<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  data <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      date<span class="token operator">:</span> <span class="token string">\'2018-02-11\'</span><span class="token punctuation">,</span>\n      amount<span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'income\'</span><span class="token punctuation">,</span>\n      note<span class="token operator">:</span> <span class="token string">\'transfer\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      date<span class="token operator">:</span> <span class="token string">\'2018-03-11\'</span><span class="token punctuation">,</span>\n      amount<span class="token operator">:</span> <span class="token number">243</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'income\'</span><span class="token punctuation">,</span>\n      note<span class="token operator">:</span> <span class="token string">\'transfer\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n      date<span class="token operator">:</span> <span class="token string">\'2018-04-11\'</span><span class="token punctuation">,</span>\n      amount<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'income\'</span><span class="token punctuation">,</span>\n      note<span class="token operator">:</span> <span class="token string">\'transfer\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleResize</span> <span class="token operator">=</span> <span class="token parameter">index</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> columns <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> nextColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>columns<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      nextColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>nextColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> size<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> columns<span class="token operator">:</span> nextColumns <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">col<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>col<span class="token punctuation">,</span>\n      <span class="token function-variable function">onHeaderCell</span><span class="token operator">:</span> <span class="token parameter">column</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n        width<span class="token operator">:</span> column<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n        onResize<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleResize</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">bordered</span> <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>components<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=a(3818);function p(n){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function e(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?o(Object(a),!0).forEach((function(s){g(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function c(n){return function(n){if(Array.isArray(n)){for(var s=0,a=new Array(n.length);s<n.length;s++)a[s]=n[s];return a}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function u(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function l(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function k(n,s){return!s||"object"!==p(s)&&"function"!=typeof s?r(n):s}function i(n){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function r(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function d(n,s){return(d=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function g(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function m(n,s){if(null==n)return{};var a,t,p=function(n,s){if(null==n)return{};var a,t,p={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||(p[a]=n[a]);return p}(n,s);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(p[a]=n[a])}return p}var h=function(s){var a=s.onResize,p=s.width,o=m(s,["onResize","width"]);return p?n.createElement(t.Resizable,{width:p,height:0,onResize:a,draggableOpts:{enableUserSelectHack:!1}},n.createElement("th",o)):n.createElement("th",o)},y=function(a){function t(){var s,a;u(this,t);for(var p=arguments.length,o=new Array(p),l=0;l<p;l++)o[l]=arguments[l];return g(r(a=k(this,(s=i(t)).call.apply(s,[this].concat(o)))),"state",{columns:[{title:"Date",dataIndex:"date",width:200},{title:"Amount",dataIndex:"amount",width:100},{title:"Type",dataIndex:"type",width:100},{title:"Note",dataIndex:"note",width:100},{title:"Action",key:"action",render:function(){return n.createElement("a",null,"Delete")}}]}),g(r(a),"components",{header:{cell:h}}),g(r(a),"data",[{key:0,date:"2018-02-11",amount:120,type:"income",note:"transfer"},{key:1,date:"2018-03-11",amount:243,type:"income",note:"transfer"},{key:2,date:"2018-04-11",amount:98,type:"income",note:"transfer"}]),g(r(a),"handleResize",(function(n){return function(s,t){var p=t.size;a.setState((function(s){var a=c(s.columns);return a[n]=e({},a[n],{width:p.width}),{columns:a}}))}})),a}var p,o,m;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&d(n,s)}(t,a),p=t,(o=[{key:"render",value:function(){var a=this,t=this.state.columns.map((function(n,s){return e({},n,{onHeaderCell:function(n){return{width:n.width,onResize:a.handleResize(s)}}})}));return n.createElement(s.Table,{bordered:!0,components:this.components,columns:t,dataSource:this.data})}}])&&l(p.prototype,o),m&&l(p,m),t}(n.Component);return n.createElement(y,null)},style:"#components-table-demo-resizable-column .react-resizable {\n  position: relative;\n  background-clip: padding-box;\n}\n\n#components-table-demo-resizable-column .react-resizable-handle {\n  position: absolute;\n  width: 10px;\n  height: 100%;\n  bottom: 0;\n  right: -5px;\n  cursor: col-resize;\n  z-index: 1;\n}",highlightedStyle:'<span class="token selector"><span class="token id">#components-table-demo-resizable-column</span> <span class="token class">.react-resizable</span> </span><span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n  <span class="token property">background-clip</span><span class="token punctuation">:</span> padding-box<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token id">#components-table-demo-resizable-column</span> <span class="token class">.react-resizable-handle</span> </span><span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>\n  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">5</span>px<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> col-resize<span class="token punctuation">;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},3822:function(n,s,a){n.exports={content:{"zh-CN":[["p","选择后进行操作，完成后清空选择，通过 ",["code","rowSelection.selectedRowKeys"]," 来控制选中项。"]],"en-US":[["p","To perform operations and clear selections after selecting some rows, use ",["code","rowSelection.selectedRowKeys"]," to control selected rows."]]},meta:{order:3,title:{"en-US":"Selection and operation","zh-CN":"选择和操作"},filename:"components/table/demo/row-selection-and-operation.md",id:"components-table-demo-row-selection-and-operation"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// Check here to configure the default column</span>\n    loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  start <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment" spellcheck="true">// ajax request after empty completing</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        selectedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  onSelectChange <span class="token operator">=</span> selectedRowKeys <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'selectedRowKeys changed: \'</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> loading<span class="token punctuation">,</span> selectedRowKeys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n      selectedRowKeys<span class="token punctuation">,</span>\n      onChange<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onSelectChange<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> hasSelected <span class="token operator">=</span> selectedRowKeys<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>start<span class="token punctuation">}</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span>hasSelected<span class="token punctuation">}</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            Reload\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token punctuation">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span>hasSelected <span class="token operator">?</span> <span class="token template-string"><span class="token string">`Selected </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>selectedRowKeys<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> items`</span></span> <span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Check here to configure the default column</span>\n    loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// ajax request after empty completing</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token parameter">selectedRowKeys</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'selectedRowKeys changed: \'</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> loading<span class="token punctuation">,</span> selectedRowKeys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n      selectedRowKeys<span class="token punctuation">,</span>\n      onChange<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onSelectChange<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> hasSelected <span class="token operator">=</span> selectedRowKeys<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>start<span class="token punctuation">}</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span>hasSelected<span class="token punctuation">}</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            Reload\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span>hasSelected <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Selected </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>selectedRowKeys<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> items</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function o(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?u(n):s}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function k(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}for(var i=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],r=[],d=0;d<46;d++)r.push({key:d,name:"Edward King ".concat(d),age:32,address:"London, Park Lane no. ".concat(d)});var g=function(a){function t(){var n,s;p(this,t);for(var a=arguments.length,o=new Array(a),l=0;l<a;l++)o[l]=arguments[l];return k(u(s=e(this,(n=c(t)).call.apply(n,[this].concat(o)))),"state",{selectedRowKeys:[],loading:!1}),k(u(s),"start",(function(){s.setState({loading:!0}),setTimeout((function(){s.setState({selectedRowKeys:[],loading:!1})}),1e3)})),k(u(s),"onSelectChange",(function(n){console.log("selectedRowKeys changed: ",n),s.setState({selectedRowKeys:n})})),s}var d,g,m;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(t,a),d=t,(g=[{key:"render",value:function(){var a=this.state,t=a.loading,p=a.selectedRowKeys,o={selectedRowKeys:p,onChange:this.onSelectChange},e=p.length>0;return n.createElement("div",null,n.createElement("div",{style:{marginBottom:16}},n.createElement(s.Button,{type:"primary",onClick:this.start,disabled:!e,loading:t},"Reload"),n.createElement("span",{style:{marginLeft:8}},e?"Selected ".concat(p.length," items"):"")),n.createElement(s.Table,{rowSelection:o,columns:i,dataSource:r}))}}])&&o(d.prototype,g),m&&o(d,m),t}(n.Component);return n.createElement(g,null)}}},3823:function(n,s,a){n.exports={content:{"zh-CN":[["p","通过 ",["code","rowSelection.selections"]," 自定义选择项，默认不显示下拉选项，设为 ",["code","true"]," 时显示默认选择项。"]],"en-US":[["p","Use ",["code","rowSelection.selections"]," custom selections, default no select dropdown, show default selections via setting to ",["code","true"],"."]]},meta:{order:4,title:{"en-US":"Custom selection","zh-CN":"自定义选择项"},filename:"components/table/demo/row-selection-custom.md",id:"components-table-demo-row-selection-custom"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// Check here to configure the default column</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  onSelectChange <span class="token operator">=</span> selectedRowKeys <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'selectedRowKeys changed: \'</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> selectedRowKeys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n      selectedRowKeys<span class="token punctuation">,</span>\n      onChange<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onSelectChange<span class="token punctuation">,</span>\n      hideDefaultSelections<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      selections<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        Table<span class="token punctuation">.</span>SELECTION_ALL<span class="token punctuation">,</span>\n        Table<span class="token punctuation">.</span>SELECTION_INVERT<span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          key<span class="token punctuation">:</span> <span class="token string">\'odd\'</span><span class="token punctuation">,</span>\n          text<span class="token punctuation">:</span> <span class="token string">\'Select Odd Row\'</span><span class="token punctuation">,</span>\n          onSelect<span class="token punctuation">:</span> changableRowKeys <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys<span class="token punctuation">:</span> newSelectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          key<span class="token punctuation">:</span> <span class="token string">\'even\'</span><span class="token punctuation">,</span>\n          text<span class="token punctuation">:</span> <span class="token string">\'Select Even Row\'</span><span class="token punctuation">,</span>\n          onSelect<span class="token punctuation">:</span> changableRowKeys <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys<span class="token punctuation">:</span> newSelectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Check here to configure the default column</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token parameter">selectedRowKeys</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'selectedRowKeys changed: \'</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> selectedRowKeys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n      selectedRowKeys<span class="token punctuation">,</span>\n      onChange<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onSelectChange<span class="token punctuation">,</span>\n      hideDefaultSelections<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      selections<span class="token operator">:</span> <span class="token punctuation">[</span>\n        Table<span class="token punctuation">.</span><span class="token constant">SELECTION_ALL</span><span class="token punctuation">,</span>\n        Table<span class="token punctuation">.</span><span class="token constant">SELECTION_INVERT</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          key<span class="token operator">:</span> <span class="token string">\'odd\'</span><span class="token punctuation">,</span>\n          text<span class="token operator">:</span> <span class="token string">\'Select Odd Row\'</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token parameter">changableRowKeys</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys<span class="token operator">:</span> newSelectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          key<span class="token operator">:</span> <span class="token string">\'even\'</span><span class="token punctuation">,</span>\n          text<span class="token operator">:</span> <span class="token string">\'Select Even Row\'</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token parameter">changableRowKeys</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> selectedRowKeys<span class="token operator">:</span> newSelectedRowKeys <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function o(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?u(n):s}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function k(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}for(var i=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],r=[],d=0;d<46;d++)r.push({key:d,name:"Edward King ".concat(d),age:32,address:"London, Park Lane no. ".concat(d)});var g=function(a){function t(){var n,s;p(this,t);for(var a=arguments.length,o=new Array(a),l=0;l<a;l++)o[l]=arguments[l];return k(u(s=e(this,(n=c(t)).call.apply(n,[this].concat(o)))),"state",{selectedRowKeys:[]}),k(u(s),"onSelectChange",(function(n){console.log("selectedRowKeys changed: ",n),s.setState({selectedRowKeys:n})})),s}var d,g,m;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(t,a),d=t,(g=[{key:"render",value:function(){var a=this,t={selectedRowKeys:this.state.selectedRowKeys,onChange:this.onSelectChange,hideDefaultSelections:!0,selections:[s.Table.SELECTION_ALL,s.Table.SELECTION_INVERT,{key:"odd",text:"Select Odd Row",onSelect:function(n){var s;s=n.filter((function(n,s){return s%2==0})),a.setState({selectedRowKeys:s})}},{key:"even",text:"Select Even Row",onSelect:function(n){var s;s=n.filter((function(n,s){return s%2!=0})),a.setState({selectedRowKeys:s})}}]};return n.createElement(s.Table,{rowSelection:t,columns:i,dataSource:r})}}])&&o(d.prototype,g),m&&o(d,m),t}(n.Component);return n.createElement(g,null)}}},3824:function(n,s,a){n.exports={content:{"zh-CN":[["p","第一列是联动的选择框。可以通过 ",["code","rowSelection.type"]," 属性指定选择类型，默认为 ",["code","checkbox"],"。"],["blockquote",["p","默认点击 checkbox 触发选择行为，需要点击行触发可以参考例子：",["a",{title:null,href:"https://codesandbox.io/s/000vqw38rl"},"https://codesandbox.io/s/000vqw38rl"]]]],"en-US":[["p","Rows can be selectable by making first column as a selectable column. You can use ",["code","rowSelection.type"]," to set selection type. Default is ",["code","checkbox"],"."],["blockquote",["p","selection happens when clicking checkbox by default. You can see ",["a",{title:null,href:"https://codesandbox.io/s/000vqw38rl"},"https://codesandbox.io/s/000vqw38rl"]," if you need row-click selection behavior."]]]},meta:{order:2,title:{"en-US":"selection","zh-CN":"可选择"},filename:"components/table/demo/row-selection.md",id:"components-table-demo-row-selection"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { Table<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Divider } from <span class="token string">\'antd\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  {\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  {\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  {\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  {\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  {\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  {\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n  {\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Disabled User\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span> rowSelection object indicates the need <span class="token keyword">for</span> row selection\n<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> {\n  onChange<span class="token punctuation">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>`selectedRowKeys<span class="token punctuation">:</span> ${selectedRowKeys}`<span class="token punctuation">,</span> <span class="token string">\'selectedRows: \'</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">,</span>\n  getCheckboxProps<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n    disabled<span class="token punctuation">:</span> record<span class="token punctuation">.</span>name <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'Disabled User\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> Column configuration <span class="token operator">not</span> <span class="token keyword">to</span> be checked\n    name<span class="token punctuation">:</span> record<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectionType<span class="token punctuation">,</span> setSelectionType<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'checkbox\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group\n        onChange<span class="token operator">=</span>{<span class="token punctuation">(</span>{ target<span class="token punctuation">:</span> { value } }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          <span class="token function">setSelectionType</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }}\n        value<span class="token operator">=</span>{selectionType}\n      <span class="token operator">></span>\n        <span class="token operator">&lt;</span>Radio value<span class="token operator">=</span><span class="token string">"checkbox"</span><span class="token operator">></span>Checkbox<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token operator">></span>\n        <span class="token operator">&lt;</span>Radio value<span class="token operator">=</span><span class="token string">"radio"</span><span class="token operator">></span>radio<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Group<span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>Divider <span class="token operator">/</span><span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>Table\n        rowSelection<span class="token operator">=</span>{{\n          type<span class="token punctuation">:</span> selectionType<span class="token punctuation">,</span>\n          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>rowSelection<span class="token punctuation">,</span>\n        }}\n        columns<span class="token operator">=</span>{columns}\n        dataSource<span class="token operator">=</span>{data}\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Divider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">text</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Disabled User\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// rowSelection object indicates the need for row selection</span>\n<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">\'selectedRows: \'</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">getCheckboxProps</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    disabled<span class="token operator">:</span> record<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'Disabled User\'</span><span class="token punctuation">,</span> <span class="token comment">// Column configuration not to be checked</span>\n    name<span class="token operator">:</span> record<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectionType<span class="token punctuation">,</span> setSelectionType<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'checkbox\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> target<span class="token operator">:</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token function">setSelectionType</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectionType<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Checkbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>radio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Divider</span></span> <span class="token punctuation">/></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n        <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          type<span class="token operator">:</span> selectionType<span class="token punctuation">,</span>\n          <span class="token operator">...</span>rowSelection<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Divider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">text</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Disabled User\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// rowSelection object indicates the need for row selection</span>\n\n<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">\'selectedRows: \'</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">getCheckboxProps</span><span class="token operator">:</span> <span class="token parameter">record</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    disabled<span class="token operator">:</span> record<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'Disabled User\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// Column configuration not to be checked</span>\n    name<span class="token operator">:</span> record<span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectionType<span class="token punctuation">,</span> setSelectionType<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'checkbox\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> target<span class="token operator">:</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token function">setSelectionType</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectionType<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Checkbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>radio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Divider</span></span> <span class="token punctuation">/></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n        <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          type<span class="token operator">:</span> selectionType<span class="token punctuation">,</span>\n          <span class="token operator">...</span>rowSelection<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n=a(0),s=(a(14),a(5));function t(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function p(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?t(Object(a),!0).forEach((function(s){o(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function o(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function e(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var a=[],t=!0,p=!1,o=void 0;try{for(var e,c=n[Symbol.iterator]();!(t=(e=c.next()).done)&&(a.push(e.value),!s||a.length!==s);t=!0);}catch(n){p=!0,o=n}finally{try{t||null==c.return||c.return()}finally{if(p)throw o}}return a}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var c=[{title:"Name",dataIndex:"name",render:function(s){return n.createElement("a",null,s)}},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],u=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Disabled User",age:99,address:"Sidney No. 1 Lake Park"}],l={onChange:function(n,s){console.log("selectedRowKeys: ".concat(n),"selectedRows: ",s)},getCheckboxProps:function(n){return{disabled:"Disabled User"===n.name,name:n.name}}};return n.createElement((function(){var a=e(n.useState("checkbox"),2),t=a[0],o=a[1];return n.createElement("div",null,n.createElement(s.Radio.Group,{onChange:function(n){var s=n.target.value;o(s)},value:t},n.createElement(s.Radio,{value:"checkbox"},"Checkbox"),n.createElement(s.Radio,{value:"radio"},"radio")),n.createElement(s.Divider,null),n.createElement(s.Table,{rowSelection:p({type:t},l),columns:c,dataSource:u}))}),null)}}},3825:function(n,s,a){n.exports={content:{"zh-CN":[["p","两种紧凑型的列表，小型列表只用于对话框内。"]],"en-US":[["p","There are two compacted table sizes: ",["code","middle"]," and ",["code","small"],". The ",["code","small"]," size is used in Modals only."]]},meta:{order:11,title:{"en-US":"size","zh-CN":"紧凑型"},filename:"components/table/demo/size.md",id:"components-table-demo-size"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token punctuation">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Middle size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Small size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'New York No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'London No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>\n    address<span class="token operator">:</span> <span class="token string">\'Sidney No. 1 Lake Park\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Middle size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Small size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],p=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"}];return n.createElement("div",null,n.createElement("h4",null,"Middle size table"),n.createElement(s.Table,{columns:t,dataSource:p,size:"middle"}),n.createElement("h4",null,"Small size table"),n.createElement(s.Table,{columns:t,dataSource:p,size:"small"}))},style:"#components-table-demo-size h4 { margin-bottom: 16px; }"}},3826:function(n,s,a){n.exports={content:{"zh-CN":[["p","通过 ",["code","summary"]," 设置总结栏。"]],"en-US":[["p","Set summary content by ",["code","summary"]," prop."]]},meta:{order:29,title:{"en-US":"Summary","zh-CN":"总结栏"},filename:"components/table/demo/summary.md",id:"components-table-demo-summary"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Typography <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Text <span class="token punctuation">}</span> <span class="token operator">=</span> Typography<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Borrow\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'borrow\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Repayment\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'repayment\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    borrow<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    repayment<span class="token punctuation">:</span> <span class="token number">33</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    borrow<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    repayment<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    borrow<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    repayment<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    borrow<span class="token punctuation">:</span> <span class="token number">75</span><span class="token punctuation">,</span>\n    repayment<span class="token punctuation">:</span> <span class="token number">45</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">bordered</span>\n    <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>pageData <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> totalBorrow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> totalRepayment <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n      pageData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> borrow<span class="token punctuation">,</span> repayment <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        totalBorrow <span class="token operator">+</span><span class="token operator">=</span> borrow<span class="token punctuation">;</span>\n        totalRepayment <span class="token operator">+</span><span class="token operator">=</span> repayment<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span><span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Total<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Text</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Text</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Balance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token operator">&lt;</span>td colSpan<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow <span class="token operator">-</span> totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Text</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span>\n  <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Typography <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Text <span class="token punctuation">}</span> <span class="token operator">=</span> Typography<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Borrow\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'borrow\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Repayment\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'repayment\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span><span class="token punctuation">,</span>\n    borrow<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    repayment<span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Green\'</span><span class="token punctuation">,</span>\n    borrow<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    repayment<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Joe Black\'</span><span class="token punctuation">,</span>\n    borrow<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    repayment<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'Jim Red\'</span><span class="token punctuation">,</span>\n    borrow<span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span>\n    repayment<span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">bordered</span>\n    <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">pageData</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> totalBorrow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> totalRepayment <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n      pageData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> borrow<span class="token punctuation">,</span> repayment <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        totalBorrow <span class="token operator">+=</span> borrow<span class="token punctuation">;</span>\n        totalRepayment <span class="token operator">+=</span> repayment<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Total<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Balance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colSpan</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow <span class="token operator">-</span> totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(14),a(5)),t=s.Typography.Text;return n.createElement(s.Table,{columns:[{title:"Name",dataIndex:"name"},{title:"Borrow",dataIndex:"borrow"},{title:"Repayment",dataIndex:"repayment"}],dataSource:[{key:"1",name:"John Brown",borrow:10,repayment:33},{key:"2",name:"Jim Green",borrow:100,repayment:0},{key:"3",name:"Joe Black",borrow:10,repayment:10},{key:"4",name:"Jim Red",borrow:75,repayment:45}],pagination:!1,bordered:!0,summary:function(s){var a=0,p=0;return s.forEach((function(n){var s=n.borrow,t=n.repayment;a+=s,p+=t})),n.createElement(n.Fragment,null,n.createElement("tr",null,n.createElement("th",null,"Total"),n.createElement("td",null,n.createElement(t,{type:"danger"},a)),n.createElement("td",null,n.createElement(t,null,p))),n.createElement("tr",null,n.createElement("th",null,"Balance"),n.createElement("td",{colSpan:2},n.createElement(t,{type:"danger"},a-p))))}})},style:'\n  #components-table-demo-summary tfoot th,\n  #components-table-demo-summary tfoot td {\n    background: #fafafa;\n  }\n  [data-theme="dark"] #components-table-demo-summary tfoot th,\n  [data-theme="dark"] #components-table-demo-summary tfoot td {\n    background: #1d1d1d;\n  }\n'}},3827:function(n,s,a){n.exports={content:{"zh-CN":[["p","通过 ",["code","react-window"]," 引入虚拟滚动方案，实现 100000 条数据的高性能表格。"]],"en-US":[["p","Integrate virtual scroll with ",["code","react-window"]," to achieve a high performance table of 100,000 data."]]},meta:{order:30,title:{"en-US":"Virtual list","zh-CN":"虚拟列表"},filename:"components/table/demo/virtual-list.md",id:"components-table-demo-virtual-list"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import { VariableSizeGrid as Grid } from <span class="token string">\'react-window\'</span><span class="token comment" spellcheck="true">;</span>\nimport ResizeObserver from <span class="token string">\'rc-resize-observer\'</span><span class="token comment" spellcheck="true">;</span>\nimport classNames from <span class="token string">\'classnames\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Table } from <span class="token string">\'antd\'</span><span class="token comment" spellcheck="true">;</span>\n\nfunction <span class="token function">VirtualTable</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> {\n  <span class="token keyword">const</span> { columns<span class="token punctuation">,</span> scroll<span class="token punctuation">,</span> className } <span class="token operator">=</span> props<span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">,</span> setTableWidth<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> widthColumnCount <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>{ width }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> !width<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>column <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>width<span class="token punctuation">)</span> {\n      return column<span class="token comment" spellcheck="true">;</span>\n    }\n\n    return {\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>column<span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>tableWidth <span class="token operator">/</span> widthColumnCount<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    }<span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> gridRef <span class="token operator">=</span> React<span class="token punctuation">.</span>useRef<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>connectObject<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span>useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> obj <span class="token operator">=</span> {}<span class="token comment" spellcheck="true">;</span>\n    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">\'scrollLeft\'</span><span class="token punctuation">,</span> {\n      get<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      set<span class="token punctuation">:</span> <span class="token punctuation">(</span>scrollLeft<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> {\n          gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>{ scrollLeft }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    return obj<span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> resetVirtualGrid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">resetAfterIndices</span><span class="token punctuation">(</span>{\n      columnIndex<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      shouldForceUpdate<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> renderVirtualList <span class="token operator">=</span> <span class="token punctuation">(</span>rawData<span class="token punctuation">:</span> object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> { scrollbarSize<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> onScroll }<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    ref<span class="token punctuation">.</span>current <span class="token operator">=</span> connectObject<span class="token comment" spellcheck="true">;</span>\n\n    return <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Grid\n        ref<span class="token operator">=</span>{gridRef}\n        className<span class="token operator">=</span><span class="token string">"virtual-grid"</span>\n        columnCount<span class="token operator">=</span>{mergedColumns<span class="token punctuation">.</span>length}\n        columnWidth<span class="token operator">=</span>{index <span class="token operator">=</span><span class="token operator">></span> {\n          <span class="token keyword">const</span> { width } <span class="token operator">=</span> mergedColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n          return index <span class="token operator">==</span><span class="token operator">=</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> width <span class="token operator">-</span> scrollbarSize <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">:</span> width<span class="token comment" spellcheck="true">;</span>\n        }}\n        height<span class="token operator">=</span>{scroll<span class="token punctuation">.</span>y}\n        rowCount<span class="token operator">=</span>{rawData<span class="token punctuation">.</span>length}\n        rowHeight<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">54</span>}\n        width<span class="token operator">=</span>{tableWidth}\n        onScroll<span class="token operator">=</span>{<span class="token punctuation">(</span>{ scrollLeft }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          <span class="token function">onScroll</span><span class="token punctuation">(</span>{ scrollLeft }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }}\n      <span class="token operator">></span>\n        {<span class="token punctuation">(</span>{ columnIndex<span class="token punctuation">,</span> rowIndex<span class="token punctuation">,</span> style }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>div\n            className<span class="token operator">=</span>{<span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">\'virtual-table-cell\'</span><span class="token punctuation">,</span> {\n              <span class="token string">\'virtual-table-cell-last\'</span><span class="token punctuation">:</span> columnIndex <span class="token operator">==</span><span class="token operator">=</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">)</span>}\n            style<span class="token operator">=</span>{style}\n          <span class="token operator">></span>\n            {rawData<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>mergedColumns<span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>dataIndex<span class="token punctuation">]</span>}\n          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n        <span class="token punctuation">)</span>}\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>ResizeObserver\n      onResize<span class="token operator">=</span>{<span class="token punctuation">(</span>{ width }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">setTableWidth</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }}\n    <span class="token operator">></span>\n      <span class="token operator">&lt;</span>Table\n        {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}\n        className<span class="token operator">=</span>{<span class="token function">classNames</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> <span class="token string">\'virtual-table\'</span><span class="token punctuation">)</span>}\n        columns<span class="token operator">=</span>{mergedColumns}\n        pagination<span class="token operator">=</span>{<span class="token boolean">false</span>}\n        components<span class="token operator">=</span>{{\n          body<span class="token punctuation">:</span> renderVirtualList<span class="token punctuation">,</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>ResizeObserver<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token operator">/</span><span class="token operator">/</span> Usage\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  { title<span class="token punctuation">:</span> <span class="token string">\'A\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">150</span> }<span class="token punctuation">,</span>\n  { title<span class="token punctuation">:</span> <span class="token string">\'B\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'key\'</span> }<span class="token punctuation">,</span>\n  { title<span class="token punctuation">:</span> <span class="token string">\'C\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'key\'</span> }<span class="token punctuation">,</span>\n  { title<span class="token punctuation">:</span> <span class="token string">\'D\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'key\'</span> }<span class="token punctuation">,</span>\n  { title<span class="token punctuation">:</span> <span class="token string">\'E\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">200</span> }<span class="token punctuation">,</span>\n  { title<span class="token punctuation">:</span> <span class="token string">\'F\'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">100</span> }<span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 100000; i += 1) {</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{\n    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>VirtualTable columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} scroll<span class="token operator">=</span>{{ y<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token string">\'100vw\'</span> }} <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> VariableSizeGrid <span class="token keyword">as</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-window\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ResizeObserver <span class="token keyword">from</span> <span class="token string">\'rc-resize-observer\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">\'classnames\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">VirtualTable</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> columns<span class="token punctuation">,</span> scroll<span class="token punctuation">,</span> className <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">,</span> setTableWidth<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> widthColumnCount <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> width <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>width<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">column</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> column<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>column<span class="token punctuation">,</span>\n      width<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>tableWidth <span class="token operator">/</span> widthColumnCount<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> gridRef <span class="token operator">=</span> React<span class="token punctuation">.</span>useRef<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>any</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>connectObject<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span>useState<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>any</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">\'scrollLeft\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">scrollLeft<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">resetVirtualGrid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">resetAfterIndices</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      columnIndex<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      shouldForceUpdate<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">renderVirtualList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">rawData<span class="token operator">:</span> object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> scrollbarSize<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> onScroll <span class="token punctuation">}</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    ref<span class="token punctuation">.</span>current <span class="token operator">=</span> connectObject<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>gridRef<span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-grid<span class="token punctuation">"</span></span>\n        <span class="token attr-name">columnCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>\n        <span class="token attr-name">columnWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">index</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> <span class="token punctuation">{</span> width <span class="token punctuation">}</span> <span class="token operator">=</span> mergedColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> index <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> width <span class="token operator">-</span> scrollbarSize <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> width<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>scroll<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rawData<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowHeight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">54</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableWidth<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onScroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token function">onScroll</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> columnIndex<span class="token punctuation">,</span> rowIndex<span class="token punctuation">,</span> style <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n            <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">\'virtual-table-cell\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n              <span class="token string">\'virtual-table-cell-last\'</span><span class="token operator">:</span> columnIndex <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n          <span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span>rawData<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>mergedColumns<span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ResizeObserver</span></span>\n      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> width <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setTableWidth</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n        <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> <span class="token string">\'virtual-table\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          body<span class="token operator">:</span> renderVirtualList<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ResizeObserver</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Usage</span>\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'A\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">150</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'B\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'C\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'D\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'E\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'F\'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100000</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">VirtualTable</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token string">\'100vw\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> VariableSizeGrid <span class="token keyword">as</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-window\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ResizeObserver <span class="token keyword">from</span> <span class="token string">\'rc-resize-observer\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">\'classnames\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">VirtualTable</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> columns<span class="token punctuation">,</span> scroll<span class="token punctuation">,</span> className <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">,</span> setTableWidth<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> widthColumnCount <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> width <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>width<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">column</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> column<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>column<span class="token punctuation">,</span> width<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>tableWidth <span class="token operator">/</span> widthColumnCount<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> gridRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>connectObject<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">\'scrollLeft\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token parameter">scrollLeft</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            scrollLeft<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">resetVirtualGrid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">resetAfterIndices</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      columnIndex<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      shouldForceUpdate<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">renderVirtualList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">rawData<span class="token punctuation">,</span> <span class="token punctuation">{</span> scrollbarSize<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> onScroll <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    ref<span class="token punctuation">.</span>current <span class="token operator">=</span> connectObject<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>gridRef<span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-grid<span class="token punctuation">"</span></span>\n        <span class="token attr-name">columnCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>\n        <span class="token attr-name">columnWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">index</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> <span class="token punctuation">{</span> width <span class="token punctuation">}</span> <span class="token operator">=</span> mergedColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> index <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> width <span class="token operator">-</span> scrollbarSize <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> width<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>scroll<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rawData<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowHeight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">54</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableWidth<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onScroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token function">onScroll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            scrollLeft<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> columnIndex<span class="token punctuation">,</span> rowIndex<span class="token punctuation">,</span> style <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n            <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">\'virtual-table-cell\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n              <span class="token string">\'virtual-table-cell-last\'</span><span class="token operator">:</span> columnIndex <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n          <span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span>rawData<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>mergedColumns<span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ResizeObserver</span></span>\n      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> width <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setTableWidth</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n        <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> <span class="token string">\'virtual-table\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          body<span class="token operator">:</span> renderVirtualList<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ResizeObserver</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token comment">// Usage</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'A\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'B\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'C\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'D\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'E\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'F\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100000</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> i<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">VirtualTable</span></span>\n    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      y<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n      x<span class="token operator">:</span> <span class="token string">\'100vw\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n=a(0),s=(a(14),a(3920)),t=e(a(55)),p=e(a(4)),o=a(5);function e(n){return n&&n.__esModule?n:{default:n}}function c(){return(c=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function u(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function l(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function k(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var a=[],t=!0,p=!1,o=void 0;try{for(var e,c=n[Symbol.iterator]();!(t=(e=c.next()).done)&&(a.push(e.value),!s||a.length!==s);t=!0);}catch(n){p=!0,o=n}finally{try{t||null==c.return||c.return()}finally{if(p)throw o}}return a}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}for(var i=[],r=0;r<1e5;r+=1)i.push({key:r});return n.createElement((function(a){var e=a.columns,i=a.scroll,r=a.className,d=k(n.useState(0),2),g=d[0],m=d[1],h=e.filter((function(n){return!n.width})).length,y=e.map((function(n){return n.width?n:function(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?u(Object(a),!0).forEach((function(s){l(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}({},n,{width:Math.floor(g/h)})})),f=n.useRef(),b=k(n.useState((function(){var n={};return Object.defineProperty(n,"scrollLeft",{get:function(){return null},set:function(n){f.current&&f.current.scrollTo({scrollLeft:n})}}),n})),1)[0],w=function(){f.current.resetAfterIndices({columnIndex:0,shouldForceUpdate:!1})};return n.useEffect((function(){return w}),[]),n.useEffect((function(){return w}),[g]),n.createElement(t.default,{onResize:function(n){var s=n.width;m(s)}},n.createElement(o.Table,c({},a,{className:(0,p.default)(r,"virtual-table"),columns:y,pagination:!1,components:{body:function(a,t){var o=t.scrollbarSize,e=t.ref,c=t.onScroll;return e.current=b,n.createElement(s.VariableSizeGrid,{ref:f,className:"virtual-grid",columnCount:y.length,columnWidth:function(n){var s=y[n].width;return n===y.length-1?s-o-1:s},height:i.y,rowCount:a.length,rowHeight:function(){return 54},width:g,onScroll:function(n){var s=n.scrollLeft;c({scrollLeft:s})}},(function(s){var t=s.columnIndex,o=s.rowIndex,e=s.style;return n.createElement("div",{className:(0,p.default)("virtual-table-cell",{"virtual-table-cell-last":t===y.length-1}),style:e},a[o][y[t].dataIndex])}))}}})))}),{columns:[{title:"A",dataIndex:"key",width:150},{title:"B",dataIndex:"key"},{title:"C",dataIndex:"key"},{title:"D",dataIndex:"key"},{title:"E",dataIndex:"key",width:200},{title:"F",dataIndex:"key",width:100}],dataSource:i,scroll:{y:300,x:"100vw"}})},style:'\n  .virtual-table .ant-table-container:before,\n  .virtual-table .ant-table-container:after {\n    display: none;\n  }\n  .virtual-table-cell {\n    box-sizing: border-box;\n    padding: 16px;\n    border-bottom: 1px solid #e8e8e8;\n    background: #FFF;\n  }\n [data-theme="dark"]  .virtual-table-cell {\n    box-sizing: border-box;\n    padding: 16px;\n    border-bottom: 1px solid #303030;\n    background: #141414;\n  }'}}}]);